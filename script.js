// script.js

document.addEventListener('DOMContentLoaded', () => {
    // Dropdown functionality for navigation
    const dropdownToggle = document.querySelector('.dropdown-toggle');
    if (dropdownToggle) {
        dropdownToggle.addEventListener('click', (e) => {
            e.preventDefault(); // Prevent default link behavior
            const dropdownMenu = dropdownToggle.nextElementSibling;
            if (dropdownMenu && dropdownMenu.classList.contains('dropdown')) {
                dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
            }
        });
        // Close dropdown if clicked outside
        document.addEventListener('click', (e) => {
            if (!dropdownToggle.contains(e.target) && !e.target.closest('.dropdown')) {
                const dropdownMenu = dropdownToggle.nextElementSibling;
                if (dropdownMenu) {
                    dropdownMenu.style.display = 'none';
                }
            }
        });
    }

    // Quiz Data
    const questions = [
        // ุงููุฌููุนุฉ ุงูุฃููู (50 ุณุคุงู)
        {
            question: "ุฃู ูู ุฎูุงุฑุงุช ุงูุจูุงูุงุช ุงูุชุงููุฉ ูู Visual Basic ููุณุชุฎุฏู ูุชุฎุฒูู ุนุจุงุฑุฉ ูุตูุฉ ุทูููุฉุ",
            options: ["Integer", "Double", "String", "Date"],
            answer: "String",
            explanation: "ููุน ุงูุจูุงูุงุช String ููุณุชุฎุฏู ูุชุฎุฒูู ุงููุตูุตุ ุจูุง ูู ุฐูู ุงูุนุจุงุฑุงุช ุงูุทูููุฉุ ุจูููุง ุงูุฃููุงุน ุงูุฃุฎุฑู ุชุณุชุฎุฏู ูุฃุบุฑุงุถ ูุฎุชููุฉ ูุซู ุงูุฃุนุฏุงุฏ ูุงูุชูุงุฑูุฎ."
        },
        {
            question: "ุนูุฏ ุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช ูู ุงูุจุฑูุฌุฉุ ูุงุฐุง ูุญุฏุซ ุนูุฏ ุชุนููู ูููุฉ ุฌุฏูุฏุฉ ููุชุบูุฑ ููุฌูุฏุ",
            options: ["ูููุฉ ุงููุชุบูุฑ ุชูุญุฐู", "ุชูุญูุธ ุงููููุฉ ุงูุฌุฏูุฏุฉ ููุท", "ุชูุณุชุจุฏู ุงููููุฉ ุงููุฏููุฉ ุจุงููููุฉ ุงูุฌุฏูุฏุฉ", "ููุบูู ุงูุจุฑูุงูุฌ"],
            answer: "ุชูุณุชุจุฏู ุงููููุฉ ุงููุฏููุฉ ุจุงููููุฉ ุงูุฌุฏูุฏุฉ",
            explanation: "ุนูุฏ ุชุนููู ูููุฉ ุฌุฏูุฏุฉ ููุชุบูุฑุ ุงููููุฉ ุงููุฏููุฉ ุชุณุชุจุฏู ุจุงููููุฉ ุงูุฌุฏูุฏุฉุ ููุง ูุชูุญ ุชุญุฏูุซ ุงูุจูุงูุงุช ุงููุฎุฒูุฉ ูู ุงูุฐุงูุฑุฉ."
        },
        {
            question: "ุฅุฐุง ูุงู ูุฏูู ุฌููุฉ ุดุฑุทูุฉ ูุซู If X < 10 Thenุ ูุง ูู ุงููุชูุฌุฉ ุฅุฐุง ูุงูุช ูููุฉ X ุชุณุงูู 10ุ",
            options: ["ูุชู ุชูููุฐ ุงูููุฏ ุฏุงุฎู ุงูุฌููุฉ ุงูุดุฑุทูุฉ", "ูุง ูุชู ุชูููุฐ ุงูููุฏ ุฏุงุฎู ุงูุฌููุฉ ุงูุดุฑุทูุฉ", "ุงูุจุฑูุงูุฌ ูุชููู", "ูุชู ุทุจุงุนุฉ ุฑุณุงูุฉ ุฎุทุฃ"],
            answer: "ูุง ูุชู ุชูููุฐ ุงูููุฏ ุฏุงุฎู ุงูุฌููุฉ ุงูุดุฑุทูุฉ",
            explanation: "ุงูุฌููุฉ ุงูุดุฑุทูุฉ If ุชูููุฐ ููุท ุฅุฐุง ูุงู ุงูุดุฑุท Trueุ ูุนูุฏูุง ุชููู X ุชุณุงูู 10 ูุฅู ุงูุดุฑุท X < 10 ูููู Falseุ ูุฐุง ูุง ูุชู ุชูููุฐ ุงูููุฏ."
        },
        {
            question: "ูุง ูู ุงููุดุบูุงุช ุงูุชู ุชูุณุชุฎุฏู ูุชูููู ุงูุนูุงูุงุช ุจูู ุงููููุ",
            options: ["ุงููุดุบูุงุช ุงูุญุณุงุจูุฉ", "ุงููุดุบูุงุช ุงููุตูุฉ", "ูุดุบูุงุช ุงูุชุนููู", "ูุดุบูุงุช ุงูููุงุฑูุฉ"],
            answer: "ูุดุบูุงุช ุงูููุงุฑูุฉ",
            explanation: "ูุดุบูุงุช ุงูููุงุฑูุฉ ุชูุณุชุฎุฏู ูุชูููู ุงูุนูุงูุงุชุ ูุซู ุงูุชุญูู ููุง ุฅุฐุง ูุงูุช ูููุฉ ูุนููุฉ ุชุณุงูู ุฃู ุฃูุจุฑ ุฃู ุฃุตุบุฑ ูู ูููุฉ ุฃุฎุฑู."
        },
        {
            question: "ูุฃู ููุน ูู ุงูุจูุงูุงุช ููุซู ุฎุงุตูุฉ Booleanุ",
            options: ["ุนุฏุฏ ุตุญูุญ ููุท", "ูููุฉ ูุตูุฉ ููุท", "ุตุญูุญ ุฃู ุฎุทุฃ ููุท", "ุฑูู ุนุดุฑู ููุท"],
            answer: "ุตุญูุญ ุฃู ุฎุทุฃ ููุท",
            explanation: "ููุน ุงูุจูุงูุงุช Boolean ูุณุชุฎุฏู ูุชุฎุฒูู ุญุงูุชูู ููุท: true (ุตุญูุญ) ูfalse (ุฎุทุฃ)."
        },
        {
            question: "ุฃู ูู ุงูุนูุงูู ุงูุชุงููุฉ ุชุคุฏู ุฅูู ุชุญููู ุนูููุฉ ุงูุฌูุน ูู ูุตูุต VB.NETุ",
            options: ["*", "+", "/", "-"],
            answer: "+",
            explanation: "ุงูุนุงูู + ููุณุชุฎุฏู ููููุงู ุจุนูููุงุช ุงูุฌูุน ุณูุงุก ุนูู ุงูุฃุนุฏุงุฏ ุฃู ูุฏูุฌ ุงููุตูุต."
        },
        {
            question: "ูุง ูู ุงูุฎุตุงุฆุต ุงูุฃุณุงุณูุฉ ููุฎูุงุฑุฒููุฉ ุงูุฌูุฏุฉุ",
            options: ["ุชุญุชุงุฌ ุฅูู ูุฏุฎูุงุช", "ูุฌุจ ุฃู ุชูุชูู ุจุนุฏ ุนุฏุฏ ุบูุฑ ูุญุฏูุฏ ูู ุงูุฎุทูุงุช", "ูุฌุจ ุฃู ุชุนุทู ููุณ ุงููุฎุฑุฌุงุช ูููุฏุฎูุงุช ุงููุชุณุงููุฉ", "ุฌููุน ูุง ุณุจู"],
            answer: "ูุฌุจ ุฃู ุชุนุทู ููุณ ุงููุฎุฑุฌุงุช ูููุฏุฎูุงุช ุงููุชุณุงููุฉ",
            explanation: "ูุฌุจ ุฃู ุชุนุทู ุงูุฎูุงุฑุฒููุฉ ููุณ ุงููุฎุฑุฌุงุช ุฏุงุฆููุง ูููุณ ุงููุฏุฎูุงุชุ ููู ูุงุญุฏุฉ ูู ุงูุฎุตุงุฆุต ุงูุฃุณุงุณูุฉ ููุง."
        },
        {
            question: "ุฃู ูู ุงูุชูุซููุงุช ุงูุชุงููุฉ ูุณุชุฎุฏู ูุชูุซูู ุงูุฎูุงุฑุฒููุงุช ุจุดูู ูุตู ุบูุฑ ุฑุณููุ",
            options: ["Flowchart", "Pseudocode", "Data Structure", "Algorithm Design"],
            answer: "Pseudocode",
            explanation: "Pseudocode ูู ุชูุซูู ุดุจู ุจุฑูุฌู ูุณุชุฎุฏู ุงููุบุฉ ุงูุจุดุฑูุฉ ูุน ุจุนุถ ุงูููุงุนุฏุ ููุง ูุณูู ููู ุงูุญููู."
        },
        {
            question: "ููู ุชุชูุฑุฑ ุงูุฃูุงูุฑ ูู ุญููุฉ For Loopุ",
            options: ["ุชุชูุฑุฑ ุทุงููุง ุฃู ุงูุดุฑุท ุตุญูุญ", "ุชุชูุฑุฑ ูุนุฏุฏ ูุญุฏุฏ ูู ุงููุฑุงุช", "ุชุชูุฑุฑ ุจุฏูู ุฃู ูุงุนุฏุฉ", "ูุง ุชุชูุฑุฑ ููุงุฆูุงู"],
            answer: "ุชุชูุฑุฑ ูุนุฏุฏ ูุญุฏุฏ ูู ุงููุฑุงุช",
            explanation: "ุญููุฉ For ุชูุณุชุฎุฏู ูุชูุฑุงุฑ ุชูููุฐ ุฃูุฑ ูุนูู ูุนุฏุฏ ุซุงุจุช ูู ุงููุฑุงุชุ ููุง ูุฌุนููุง ูุนุงูุฉ ููุฃุฏุงุก ุงููููู."
        },
        {
            question: "ูุง ูู ููุนูุฉ ุงูุฏุงูุฉ ุงูุชู ูุง ุชูุฑุฌุน ูููุฉ ูู VB.NETุ",
            options: ["Returning Function", "Value Function", "Callback Function", "Void Function"],
            answer: "Void Function",
            explanation: "ุฏุงูุฉ ุจุฏูู ูููุฉ ุฅุฑุฌุงุน (Void Function) ุชููุฐ ูููุฉ ูุนููุฉ ูููููุง ูุง ุชูุฑุฌุน ุฃู ูููุฉุ ููุง ูุนูู ุฃููุง ุชุคุฏู ูุธููุฉ ุฏูู ุฃู ุชุนูุฏ ุจูุงูุงุช."
        },
        {
            question: "ูุง ูู ุชุนุฑูู ุงูุจุฑูุฌุฉุ",
            options: ["ูุชุงุจุฉ ููุงูุงุช", "ุฅุนุทุงุก ุฃูุงูุฑ ุตูุชูุฉ ููููุจููุชุฑ", "ูุชุงุจุฉ ุชุนูููุงุช ูููููุง ุงูููุจููุชุฑ", "ุงูุฑุณู ุนูู ุงูููุจููุชุฑ"],
            answer: "ูุชุงุจุฉ ุชุนูููุงุช ูููููุง ุงูููุจููุชุฑ",
            explanation: "ุงูุจุฑูุฌุฉ ูู ุนูููุฉ ูุชุงุจุฉ ุงูุชุนูููุงุช ุงูุชู ูุชูุฌุจ ุนูู ุงูููุจููุชุฑ ููููุง ูุชูููุฐูุง ูุฃุฏุงุก ููุงู ูุญุฏุฏุฉ."
        },
        {
            question: "ุฃู ูู ุงูุขุชู ููุนุฏ ูุบุฉ ุจุฑูุฌุฉ ุนุงููุฉ ุงููุณุชููุ",
            options: ["Machine Code", "Assembly", "Java", "Binary"],
            answer: "Java",
            explanation: "Java ูู ูุบุฉ ุจุฑูุฌุฉ ุนุงููุฉ ุงููุณุชูู ุชุชูุญ ูุชุงุจุฉ ุชุนูููุงุช ูุฑูุจุฉ ูู ุงููุบุฉ ุงูุทุจูุนูุฉ ููุง ูุณูู ููููุง ูุงุณุชุฎุฏุงููุง."
        },
        {
            question: "ุงูุฎุทูุฉ ุงูุฃููู ูู ุญู ุฃู ูุดููุฉ ุจุฑูุฌูุฉ ูู:",
            options: ["ุชุดุบูู ุงูุจุฑูุงูุฌ", "ุชุตููู ุงููุงุฌูุฉ", "ูุชุงุจุฉ ุงูููุฏ", "ุชุญุฏูุฏ ุงููุดููุฉ"],
            answer: "ุชุญุฏูุฏ ุงููุดููุฉ",
            explanation: "ุชุญุฏูุฏ ุงููุดููุฉ ูู ุฃูู ุฎุทูุฉ ูู ุนูููุฉ ุงูุจุฑูุฌุฉุ ูุฃููุง ุชุณุงุนุฏ ุนูู ููู ูุง ููุจุบู ุญูู ูู ุงูุจุฏุงูุฉ."
        },
        {
            question: "ุฃู ุฃุฏุงุฉ ุชูุณุชุฎุฏู ููุชุงุจุฉ ุงูุฃููุงุฏ ุงูุจุฑูุฌูุฉุ",
            options: ["ุงูุฑุณุงู", "Word", "Visual Studio Code", "Excel"],
            answer: "Visual Studio Code",
            explanation: "Visual Studio Code ูู ูุญุฑุฑ ุฃููุงุฏ ูุตูู ุฎุตูุตูุง ููุชุงุจุฉ ุงูุจุฑูุฌูุงุชุ ููู ุดุงุฆุน ุงูุงุณุชุฎุฏุงู ุจูู ุงููุจุฑูุฌูู."
        },
        {
            question: "ูู ุฎุฑุงุฆุท ุงูุชุฏููุ ุงูุฑูุฒ ๐ท ููุณุชุฎุฏู ูุชูุซูู:",
            options: ["ุจุฏุงูุฉ ุงูุจุฑูุงูุฌ", "ูุฑุงุฑ", "ุนูููุฉ ุญุณุงุจูุฉ", "ุฅุฎุฑุงุฌ ุจูุงูุงุช"],
            answer: "ูุฑุงุฑ",
            explanation: "ุงูุฑูุฒ ุงููุงุณู (๐ท) ููุณุชุฎุฏู ูุชูุซูู ููุทุฉ ุงุชุฎุงุฐ ูุฑุงุฑ (Decision) ูู ุฎุฑุงุฆุท ุงูุชุฏูู."
        },
        {
            question: "ุฃู ูู ุงูุขุชู ููุซู ุฏุงูุฉ ูุฅุฎุฑุงุฌ ุงููุต 'Hello World'ุ",
            options: ["echo 'Hello'", "write('Hello')", "print('Hello World')", "display('Hello')"],
            answer: "print('Hello World')",
            explanation: "ุฏุงูุฉ print('Hello World') ุชูุณุชุฎุฏู ูู ุงูุนุฏูุฏ ูู ูุบุงุช ุงูุจุฑูุฌุฉ ูุฅุฎุฑุงุฌ ุงููุตูุต ุฅูู ุงูุดุงุดุฉ."
        },
        {
            question: "ุฃู ูู ุงูุชุงูู ููุนุชุจุฑ ูู ูุบุงุช ุงูุจุฑูุฌุฉ ููุฎูุถุฉ ุงููุณุชููุ",
            options: ["Python", "Assembly", "JavaScript", "C++"],
            answer: "Assembly",
            explanation: "Assembly ุชูุนุชุจุฑ ูู ูุบุงุช ุงูุจุฑูุฌุฉ ููุฎูุถุฉ ุงููุณุชูู ูุฃููุง ุชุนูู ูุฑูุจุฉ ูู ูุบุฉ ุงูุขูุฉ."
        },
        {
            question: "ูู VB.NET ุฃู ููุง ููู ูุนุชุจุฑ ูุงุฆู (Object)ุ",
            options: ["Button", "String", "Loop", "Event"],
            answer: "Button",
            explanation: "Button ูู ุนูุตุฑ ูุงุฌูุฉ ูุณุชุฎุฏู ูู ุงูุจุฑูุฌุฉ ููุนุชุจุฑ ูุงุฆููุง ููุณุชุฎุฏู ูุชูุงุนู ุงููุณุชุฎุฏู ูุน ุงูุชุทุจูู."
        },
        {
            question: "ูุง ูุธููุฉ ุงูุฏุงูุฉ Val()ุ",
            options: ["ุชุญููู ูุต ุฅูู ุญุฑู", "ุชุญููู ูุต ุฅูู ุฑูู", "ุชุญููู ุฑูู ุฅูู ูุต", "ุนุฏ ุงูุญุฑูู"],
            answer: "ุชุญููู ูุต ุฅูู ุฑูู",
            explanation: "ุงูุฏุงูุฉ Val() ุชูุณุชุฎุฏู ูุชุญููู ุณูุณูุฉ ูุตูุฉ ุชูุซู ุนุฏุฏูุง ุฅูู ููุน ุงูุจูุงูุงุช ุงูุฑููู."
        },
        {
            question: "ูุงูุฐุฉ ุชุนุฑุถ ุงูุฃุฎุทุงุก ุฃุซูุงุก ุชูููุฐ ุงูุจุฑูุงูุฌ ูู:",
            options: ["Properties", "Form", "Code", "Error List"],
            answer: "Error List",
            explanation: "ูุงูุฐุฉ Error List ุชุนุฑุถ ุงูุฃุฎุทุงุก ุงูุชู ุชุญุฏุซ ุฃุซูุงุก ุชูููุฐ ุงูุจุฑูุงูุฌุ ููุง ูุณุงุนุฏ ุงููุจุฑูุฌ ุนูู ุชุตุญูุญูุง."
        },
        {
            question: "ุฃู ูู ุงูุชุงูู ุฑูุฒ ูุฅุฏุฎุงู ุฃู ุฅุฎุฑุงุฌ ุงูุจูุงูุงุช ูู ุฎุฑุงุฆุท ุงูุชุฏููุ",
            options: ["๐", "๐ท", "๐ฒ", "๐ฅ"],
            answer: "๐ฒ",
            explanation: "ุงูุดูู ุงููุชูุงุฒู ุงููุณุชุทููุงุช (๐ฒ) ููุณุชุฎุฏู ููุฅุดุงุฑุฉ ุฅูู ุฅุฏุฎุงู ุฃู ุฅุฎุฑุงุฌ ุงูุจูุงูุงุช ูู ุฎุฑุงุฆุท ุงูุชุฏูู."
        },
        {
            question: "ูู ุงูุฌูู ุงูุดุฑุทูุฉุ ุฃู ุตูุบุฉ ุชูุซู ุดุฑุทูุง ุจุณูุทูุงุ",
            options: ["Else If", "If Condition", "Switch", "For"],
            answer: "If Condition",
            explanation: "ุฌููุฉ If Condition (ุฃู ุจุจุณุงุทุฉ If) ูู ุงูุฃุณุงุณ ูุชุญุฏูุฏ ุงููุณุงุฑ ุงูุฐู ูุฌุจ ุงุชุจุงุนู ุจูุงุกู ุนูู ุดุฑุท ุจุณูุท."
        },
        {
            question: "ูุชูุฑุงุฑ ุชูููุฐ ููุฏ ุนุฏุฏ ูุนูู ูู ุงููุฑุงุช ูุณุชุฎุฏู:",
            options: ["If", "While", "For", "Function"],
            answer: "For",
            explanation: "ุญููุฉ For ุชูุณุชุฎุฏู ููุชูุฑุงุฑ ุนุฏุฏ ูุญุฏุฏ ูู ุงููุฑุงุชุ ููุง ูุฌุนููุง ููุงุณุจุฉ ูุฐูู."
        },
        {
            question: "ุฃู ููุน ูู ุงููุชุบูุฑุงุช ูุณุชุฎุฏู ูุชุฎุฒูู ูุตุ",
            options: ["Integer", "Boolean", "Double", "String"],
            answer: "String",
            explanation: "ูุชุบูุฑ ูู ููุน String ููุณุชุฎุฏู ูุชุฎุฒูู ุงููุตูุต."
        },
        {
            question: "ูู VB.NET ูุง ูุธููุฉ ุตูุฏูู ุงูุฃุฏูุงุช (Toolbox)ุ",
            options: ["ุชุนุฏูู ุงูููุฏ", "ุนุฑุถ ุงูุฃุฎุทุงุก", "ูุถุน ุนูุงุตุฑ ูุซู ุงูุฃุฒุฑุงุฑ ูุงููุตูุต", "ุชุบููุฑ ุฎุตุงุฆุต ุงููุดุฑูุน"],
            answer: "ูุถุน ุนูุงุตุฑ ูุซู ุงูุฃุฒุฑุงุฑ ูุงููุตูุต",
            explanation: "Toolbox ุชูุณุชุฎุฏู ูุชูููุฑ ุงูุนูุงุตุฑ ุงูุฃุณุงุณูุฉ ุงูุชู ูุญุชุงุฌูุง ุงููุจุฑูุฌ ูุซู ุงูุฃุฒุฑุงุฑ ููุฑุจุนุงุช ุงููุตูุต."
        },
        {
            question: "ูู ุฎูุงู Visual Basic .NET ูุชู ูุชุญ ูุดุฑูุน ุฌุฏูุฏ ูู:",
            options: ["Recent", "Create Project", "Save", "Format"],
            answer: "Create Project",
            explanation: "ุงูุงุฎุชูุงุฑ Create Project ููุณุชุฎุฏู ูุจุฏุก ูุดุฑูุน ุฌุฏูุฏ ูู ุจูุฆุฉ ุชุทููุฑ Visual Studio."
        },
        {
            question: "ูุฅุธูุงุฑ ุชุงุฑูุฎ ุงูููู ูุณุชุฎุฏู ุงูุฏุงูุฉ:",
            options: ["Val()", "DateString", "TimeString", "Len()"],
            answer: "DateString",
            explanation: "ุงูุฏุงูุฉ DateString ุชูุณุชุฎุฏู ูุฅุธูุงุฑ ุงูุชุงุฑูุฎ ุงูุญุงูู ูู VB.NET."
        },
        {
            question: "ุฃู ูู ุงูุชุงูู ููุนุชุจุฑ ูู ุงููุดุบูุงุช ุงูุญุณุงุจูุฉุ",
            options: ["+", "==", "!", "&&"],
            answer: "+",
            explanation: "ุงูุนุงูู ุงูุฌูุน (+) ููุณุชุฎุฏู ูู ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ูุซู ุงูุฌูุน ุจูู ุงูุฃุนุฏุงุฏ."
        },
        {
            question: "ูู VB.NET ุฃู ูู ุงูุชุงูู ููุณุชุฎุฏู ูุฏูุฌ ุงููุตูุตุ",
            options: ["-", "&", "+", "="],
            answer: "&", // VB.NET uses & primarily for string concatenation. + also works but & is preferred.
            explanation: "ูุชู ุฏูุฌ ุงููุตูุต ุจุงุณุชุฎุฏุงู ุงูุนุงูู + ุฃู & ูู VB.NETุ ุญูุซ ููููุงู ุจุฏูุฌ ุงูููู ุงููุตูุฉ ูุนูุง. ุงูุนุงูู & ูู ุงูุฃูุซุฑ ุดููุนูุง ููุถูุญูุง ูุฏูุฌ ุงููุตูุต ุชุญุฏูุฏูุง."
        },
        {
            question: "ูุง ููุน ุงูุญููุฉ ุงูุชู ุชูุณุชุฎุฏู ุนูุฏูุง ูุง ูุนุฑู ุนุฏุฏ ูุฑุงุช ุงูุชูุฑุงุฑ ูุณุจููุงุ",
            options: ["For", "Do Until", "While", "Next"],
            answer: "While",
            explanation: "ุญููุฉ While ุชูุณุชุฎุฏู ุนูุฏูุง ูุง ูููู ุชุญุฏูุฏ ุนุฏุฏ ุงูุชูุฑุงุฑุงุช ูุณุจููุงุ ุญูุซ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุดุฑุท ุตุญูุญ."
        },
        {
            question: "ุฃู ูู ุงูุฎูุงุฑุงุช ุงูุชุงููุฉ ููุซู ูููุฉ ูู ุงูููุน Listุ",
            options: ["(username): 'mohamed'", "[mohamed]", "{mohamed}", "(mohamed)"],
            answer: "[mohamed]",
            explanation: "ุงูุดูู [mohamed] ููุซู ูุงุฆูุฉ (List) ุชุญุชูู ุนูู ุนูุตุฑ ูุงุญุฏ ููู 'mohamed'. ุงูุฎูุงุฑุงุช ุงูุฃุฎุฑู ุบูุฑ ุตุญูุญุฉ ูุฃููุง ููุณุช ูู ุตูุบุฉ ูุงุฆูุฉ ุตุญูุญุฉ."
        },
        {
            question: "ุญุฏุฏ ุงูููู ุงูุชู ุชุนุฏ ูู ุงูููุน double ูู ูุบุฉ Dart. (ุงุฎุชุฑ ุฌููุน ุงูุฅุฌุงุจุงุช ุงูุตุญูุญุฉ)",
            options: ["5", "'5.5'", "5.6"],
            answer: ["5.6"], // Note: '5.5' is a String, not a double directly.
            explanation: "ุงููููุฉ 5.6 ุชุนุชุจุฑ ูู ุงูููุน double. '5.5' ูู ูููุฉ ูุตูุฉ ูููุณุช ุฑูููุฉ ูุจุงุดุฑุฉ."
        },
        {
            question: "ุชุดูู ุงูููู ุงูููุทููุฉ:",
            options: ["ุงูููู ุงูููุฌุจุฉ ูุงูุณุงูุจุฉ", "ุงููุตูุต ุงูุทูููุฉ ูุงููุตูุฑุฉ", "ุงูููุงุฆู ูุงููุตูููุงุช", "ุตุญูุญ ูุฎุทุฃ"],
            answer: "ุตุญูุญ ูุฎุทุฃ",
            explanation: "ุงูููู ุงูููุทููุฉ ุชุนูู ุงูููู ุงูุชู ุชุดูุฑ ุฅูู ุงูุญุงูุฉ ุงูุตุญูุญุฉ ุฃู ุงูุฎุงุทุฆุฉ (True/False)."
        },
        {
            question: "ุชูุณุชุฎุฏู ุงููููุฉ ุงูููุชุงุญูุฉ .... ููุฅุนูุงู ุนู ุงููุชุบูุฑุงุช ูู ูุบุฉ Visual Basic.",
            options: ["Constant", "Dim", "Var", "Static"],
            answer: "Dim",
            explanation: "ุงููููุฉ ุงูููุชุงุญูุฉ Dim ุชูุณุชุฎุฏู ูู ูุบุฉ Visual Basic ูุฅุนูุงู ุงููุชุบูุฑุงุช."
        },
        {
            question: "ูุณุชูุฏู ููููู ุงููุดููุงุช ุงูุชุนุงูู ูุน ุงููููู ุงููุงุฏู ... ูู ุฌูุงุฒ ุงูุญุงุณุจ.",
            options: ["ุงููุนุงูุฌ (Processor)", "ุงูุฐุงูุฑุฉ (RAM)", "ูุญุฏุงุช ุงูุฅุฏุฎุงู (Input Units)", "ูุญุฏุงุช ุงูุฅุฎุฑุงุฌ (Output Units)"],
            answer: "ุฌููุน ูุง ุณุจู", // Modified to be single choice as per quiz structure
            explanation: "ุฌููุน ุงูุฎูุงุฑุงุช ุชุดูุฑ ุฅูู ููููุงุช ูุงุฏูุฉ ูู ุงูุญุงุณูุจ (ุงููุนุงูุฌุ ุงูุฐุงูุฑุฉุ ูุญุฏุงุช ุงูุฅุฏุฎุงูุ ููุญุฏุงุช ุงูุฅุฎุฑุงุฌ) ูุงูุชู ูููู ุฃู ุชูุชุฌ ุนููุง ูุดููุงุช ุจุฑูุฌูุฉ."
        },
        {
            question: "ุญุฏุฏ ุงูุฏูุงู ุงูุชู ูุฌุจ ุงุณุชุฎุฏุงู ุงููููุฉ ุงูููุชุงุญูุฉ ูููุง. (ุงุฎุชุฑ ุฌููุน ุงูุฅุฌุงุจุงุช ุงูุตุญูุญุฉ)",
            options: ["int calc", "calc"],
            answer: ["int calc", "calc"], // Assuming both represent function declarations, one with explicit return type.
            explanation: "ุชุณุชุฎุฏู ุงููููุฉ ุงูููุชุงุญูุฉ (ูุซู `function` ุฃู `void` ุฃู ููุน ุงูุฅุฑุฌุงุน) ูู ุชุนุฑูู ุงูุฏูุงูุ ุณูุงุก ุจุชุญุฏูุฏ ููุน ุงูุฅุฑุฌุงุน ุฃู ุจุฏููู (ูู ุจุนุถ ุงููุบุงุช)."
        },
        {
            question: "ุชุนุชุจุฑ ุงูุนูุงูุฉ ..... ูู ูุดููุงุช ูุบุฉ Dart ุงููุณุคููุฉ ุนู ุฅุฌุฑุงุก ุนูููุฉ ุจุงูู ุงููุณูุฉ.",
            options: ["10", "%", "1000"],
            answer: "%",
            explanation: "ุนูุงูุฉ % ุชูุณุชุฎุฏู ููุญุตูู ุนูู ุจุงูู ุงููุณูุฉ (Modulo operator)."
        },
        {
            question: "ุชุนุชุจุฑ .... ูู ุงููููุงุช ุงูููุชุงุญูุฉ ุงููุณุชุฎุฏูุฉ ูู ุฅูุดุงุก ุฌููุฉ ุชูุฑุงุฑูุฉ ูู ูุบุฉ Dart.",
            options: ["While", "Key", "For", "Condition"],
            answer: ["While", "For"],
            explanation: "ุชูุณุชุฎุฏู ูู ูู While ู For ูุฅูุดุงุก ุญููุงุช ุชูุฑุงุฑูุฉ (Loops)."
        },
        {
            question: "ุชุนุชุจุฑ ..... ูู ุงููููุงุช ุงูููุชุงุญูุฉ ุงููุณุชุฎุฏูุฉ ูู ุฅูุดุงุก ุฌููุฉ ุดุฑุทูุฉ ูู ูุบุฉ Dart.",
            options: ["While", "If", "For", "Condition"],
            answer: "If",
            explanation: "ุงููููุฉ ุงูููุชุงุญูุฉ `if` ุชูุณุชุฎุฏู ูุฅูุดุงุก ุฌูู ุดุฑุทูุฉ."
        },
        {
            question: "ูุณุชุฎุฏู ุงูุชุบููุฑ ....... ููุฅุนูุงู ุนู ูุชุบูุฑ ูุดูู ุฎุฑูุทุฉ ูู ุงูุจูุงูุงุช ุงููุฎุชููุฉ.",
            options: ["String", "List", "Map<String, dynamic>", "Map"],
            answer: "Map<String, dynamic>",
            explanation: "ููุณุชุฎุฏู Map<String, dynamic> ููุฅุนูุงู ุนู ุฎุฑูุทุฉ (Map) ุชุชุถูู ููุงุชูุญ ูู ููุน String ูููู ูู ููุน dynamicุ ููู ุงูููุน ุงูุฃูุซุฑ ุชุญุฏูุฏูุง ูุฎุฑูุทุฉ ุจูุงูุงุช ูุชููุนุฉ."
        },
        {
            question: "ูู ูู ุงูููุงุนุฏ ุงูุฃุณุงุณูุฉ ูู ุงูุจุฑูุฌุฉ ุชุดูุฑ ุฅูู ุงุณุชุฎุฏุงู ุฃุฏูุงุช ููุชุญูู ูุงุชุฎุงุฐ ุงููุฑุงุฑุงุช ุฏุงุฎู ุงูุจุฑูุงูุฌ.",
            options: ["ุฃููุงุน ุงูุจูุงูุงุช (Data Types)", "ุงูุฌูู ุงูุดุฑุทูุฉ (Conditional Statements)", "ุงููุนุงููุงุช (Operators)"],
            answer: "ุงูุฌูู ุงูุดุฑุทูุฉ (Conditional Statements)",
            explanation: "ุชูุณุชุฎุฏู ุงูุฌูู ุงูุดุฑุทูุฉ ููุชุญูู ูู ุชุฏูู ุงูุจุฑูุงูุฌ ูุงุชุฎุงุฐ ุงููุฑุงุฑุงุช."
        },
        {
            question: "ูุณุชุฎุฏู ุงูุดูู ....... ููุชุนุจูุฑ ุนู ุงููุฏุฎูุงุช ูุงููุฎุฑุฌุงุช ูู ุฎุฑุงุฆุท ุงูุชุฏูู.",
            options: ["ุงููุณุชุทูู (Rectangle)", "ุงูุจูุถุงูู (Oval)", "ุงููุนูู (Rhombus)"],
            answer: "ุงููุชูุงุฒู ุงูุฃุถูุงุน (Parallelogram)", // Corrected to match standard flowchart symbols. Oval is for start/end.
            explanation: "ุงูุดูู ุงููุชูุงุฒู ุงููุณุชุทููุงุช ููุณุชุฎุฏู ูุชูุซูู ุงููุฏุฎูุงุช ูุงููุฎุฑุฌุงุช ูู ุฎุฑุงุฆุท ุงูุชุฏููุ ุจูููุง ุงูุจูุถุงูู ูู ููุจุฏุงูุฉ/ุงูููุงูุฉ."
        },
        {
            question: "ุญุฏุฏ ุงูุนูููุฉ ุงููุณุคููุฉ ุนู ููุทุฉ ุงูููุงูุฉ ูุฌููุฉ ุงูุชูุฑุงุฑ ูู ูุบุฉ Dart.",
            options: ["1 = 10", "10", "1 = 10"], // options are confusing, assume it's about loop condition
            answer: "ุงูุดุฑุท ุงูุฐู ูุฌุนู ุงูุญููุฉ ุชุชููู", // Rephrased for clarity
            explanation: "ููุทุฉ ุงูููุงูุฉ ูุฌููุฉ ุงูุชูุฑุงุฑ ูู ูุบุฉ Dart (ูุซู For ุฃู While) ูุชู ุชุญุฏูุฏูุง ุจูุงุณุทุฉ ุงูุดุฑุท ุงูุฐู ูุฌุนู ุงูุญููุฉ ุชุชููู ุนู ุงูุชูููุฐ."
        },
        {
            question: "ุชุณุชุฎุฏู ุงูุฃููุงุณ ...... ูุชุญุฑูุฑ ุงูุจูุงูุงุช ุฏุงุฎู ุงูุฏุงูุฉ.",
            options: ["[]", "()", "{}"],
            answer: "()",
            explanation: "ุชุณุชุฎุฏู ุงูุฃููุงุณ () ูุชุญุฏูุฏ ุงูุจูุงูุงุช ุงูุชู ูุชู ุชูุฑูุฑูุง ุฅูู ุงูุฏุงูุฉ (ุงูุจุงุฑุงูุชุฑุงุช/ุงููุณุงุฆุท)."
        },
        {
            question: "ุงููุญุฏุฏ ูู ุงูุฃุฏูุงุช ุงูุจุฑูุฌูุฉ ุงูุชู ุชููู ุงููุจุฑูุฌ ูู ุชูุธูู ุงูุจุฑูุงูุฌ ูู ูุธุงุฆู ูููุตูุฉ.",
            options: ["ูุฌููุนุฉ ุชุทููุฑ ุงูุจุฑูุฌูุงุช (SDK)", "ุงููุชุบูุฑุงุช ูุงูุซูุงุจุช", "ุงูุฌูู ุงูุดุฑุทูุฉ ูุงูุชูุฑุงุฑูุฉ", "ุงูุฏูุงู (Functions)"],
            answer: "ุงูุฏูุงู (Functions)",
            explanation: "ุชูุณุงุนุฏ ุงูุฏูุงู ูู ุชูุธูู ุงูููุฏ ุฅูู ุฃูุณุงู ูููู ุฅุนุงุฏุฉ ุงุณุชุฎุฏุงููุงุ ููุง ูุฌุนู ุงูุจุฑูุงูุฌ ุฃูุซุฑ ุชูุธูููุง."
        },
        {
            question: "ุชุณุชุฎุฏู ุงููููุฉ ุงูููุชุงุญูุฉ .. ููุฅุนูุงู ุนู ุงูุซูุงุจุช ูู ูุบุฉ Dart.",
            options: ["Constant", "Const", "Var"],
            answer: "Const",
            explanation: "const ุชูุณุชุฎุฏู ูุชุญุฏูุฏ ุงูุซูุงุจุช ูู Dart ุงูุชู ุชุนุฑู ููุช ุงูุชุฑุฌูุฉ."
        },
        {
            question: "ูุง ูู ุชุฑุชูุจ ุงูุฃุฌุฒุงุก ุงูุฑุฆูุณูุฉ ููุญููุฉ ุงูุชูุฑุงุฑูุฉ ูู ุฏุงุฑุชุ",
            options: ["ุชุนุฑูู ุงูุนุฏุงุฏ - ุงูุดุฑุท - ุงูุฎุทูุฉ", "ุชุนุฑูู ุงูุนุฏุงุฏ - ุงูุฎุทูุฉ - ุงูุดุฑุท", "ุงูุฎุทูุฉ - ุชุนุฑูู ุงูุนุฏุงุฏ - ุงูุดุฑุท", "ุงูุดุฑุท - ุงูุฎุทูุฉ - ุชุนุฑูู ุงูุนุฏุงุฏ"],
            answer: "ุชุนุฑูู ุงูุนุฏุงุฏ - ุงูุดุฑุท - ุงูุฎุทูุฉ",
            explanation: "ุงูุชุฑุชูุจ ุงูุตุญูุญ ูุฃุฌุฒุงุก ุญููุฉ For (For Loop) ูู: ุชููุฆุฉ ุงูุนุฏุงุฏ (ุชุนุฑูู ุงูุนุฏุงุฏ)ุ ุงูุดุฑุทุ ูุงูุฎุทูุฉ (ุงูุฒูุงุฏุฉ/ุงูููุตุงู)."
        },
        {
            question: "ูุชูุฌุฉ ุงูุนูููุฉ ุงูุชุงููุฉ: 5 - 15",
            options: ["10", "-10", "True"],
            answer: "-10",
            explanation: "ุงููุงุชุฌ ูู 5 - 15 = -10."
        },
        {
            question: "ุชุณุชุฎุฏู ุงููููุฉ ุงููุงุฑุซุฉ ููุชุนุจูุฑ ุนู:",
            options: ["ุงููููุฉ ุงููุงุฑุบุฉ (Empty Value)", "ุงูุฑูู ุตูุฑ (The number Zero)", "ูููุฉ ุบูุฑ ูุนุฑููุฉ (An Unknown Value)"],
            answer: "ูููุฉ ุบูุฑ ูุนุฑููุฉ (An Unknown Value)", // Null or undefined implies unknown/absence
            explanation: "ูู ุณูุงู ุงูุจุฑูุฌุฉุ ุงููููุฉ ุงููุงุฑุซุฉ (ุฃู Null/Undefined) ุบุงูุจูุง ูุง ุชุนุจุฑ ุนู ูููุฉ ุบูุฑ ููุฌูุฏุฉ ุฃู ุบูุฑ ูุนุฑููุฉ."
        },
        {
            question: "ูุนุชุจุฑ ..... ูู ุงููุณุคูู ุนู ุชุฎุฒูู ุงูููู ุงูุชู ูุง ุชุชุบูุฑ ุฃุซูุงุก ุชุดุบูู ุงูุจุฑูุงูุฌ.",
            options: ["ุงููุชุบูุฑุงุช (Variables)", "ุงูุซูุงุจุช (Constants)", "ุงูุฐุงูุฑุฉ ุงููุคูุชุฉ (Temporary Memory)"],
            answer: "ุงูุซูุงุจุช (Constants)",
            explanation: "ุงูุซูุงุจุช ุชูุณุชุฎุฏู ูุชุฎุฒูู ุงูููู ุงูุซุงุจุชุฉ ุงูุชู ูุง ุชุชุบูุฑ ุฃุซูุงุก ุชุดุบูู ุงูุจุฑูุงูุฌ."
        },
        {
            question: "ุชุณุชุฎุฏู ุงููููุฉ ุงูููุชุงุญูุฉ ...... ูุชุนููู ุงููุฎุฑุฌ ุงููุงุชุฌ ูู ุงูุฏุงูุฉ.",
            options: ["Output", "Print", "Return"],
            answer: "Return",
            explanation: "ุชุณุชุฎุฏู return ูุฅุฑุฌุงุน ูููุฉ ูู ุงูุฏุงูุฉ ุฅูู ุงูุฌุฒุก ุงูุฐู ุงุณุชุฏุนุงูุง."
        },
        {
            question: "ุนุฏุฏ ุงูููู ุงูุชู ุชุนุฏ ูู ุงูููุน ูู Dart.", // Question is incomplete, assuming "int" type.
            options: ["5", "3", "30", "50"],
            answer: ["5", "3", "30", "50"], // All are integers
            explanation: "ุฌููุน ุงูุฃุฑูุงู ุงูุตุญูุญุฉ ูุซู 5ุ 3ุ 30ุ 50 ุชุนุชุจุฑ ูู ุงูููุน int (ุนุฏุฏ ุตุญูุญ) ูู Dart."
        },
        {
            question: "ุนุฏุฏ ุฃููุงุน ุงูุจูุงูุงุช ุงููุฑูุจุฉ ุงููุฐููุฑุฉ ูู ุงูุจุฏุงุฆู. (ุงุฎุชุฑ ุฌููุน ุงูุฅุฌุงุจุงุช ุงูุตุญูุญุฉ)", // Assuming the options refer to complex data types
            options: ["Display Value", "Dynamic", "Map"],
            answer: ["Dynamic", "Map"], // List should also be here, but not an option. Dynamic and Map are complex.
            explanation: "ูู ูู Dynamic (ูุฃูู ูููู ุฃู ูุชุบูุฑ ููุนู) ู Map (ูุฃูู ูููู ุจูุงูุงุช ูุนูุฏ) ููุซูุงู ุฃููุงุน ุจูุงูุงุช ูุฑูุจุฉ ูู Dart."
        },
        {
            question: "ูุณุชูุฏู ููููู ... ุงูุชุนุงูู ูุน ุงูุฐุงูุฑุฉ ูู ุฌูุงุฒ ุงูุญุงุณุจ.",
            options: ["ุงููุนุงูุฌุงุช (Processors)", "ุงูุฏูุงู (Functions)", "ุฃููุงุน ุงูุจูุงูุงุช (Data Types)"],
            answer: "ุงูุฏูุงู (Functions)", // Functions often manage memory allocation/deallocation implicitly or explicitly
            explanation: "ุชูุณุชุฎุฏู ุงูุฏูุงู ูู ุฅุฏุงุฑุฉ ุงูุฐุงูุฑุฉ ุจุดูู ูุนูุงูุ ุฎุงุตุฉ ุนูุฏ ุชุฎุตูุต ูุชุญุฑูุฑ ุงูููุงุฑุฏ."
        },
        {
            question: "ุชุณุชุฎุฏู ุงูุฌููุฉ ..... ูุฅุถุงูุฉ ุนุฏุฉ ุดุฑูุท ูู ุฌููุฉ ุดุฑุทูุฉ.",
            options: ["If", "Else", "Switch"],
            answer: "If",
            explanation: "ุชุณุชุฎุฏู `if` (ูุน `else if`) ููุชุญูู ูู ุงูุดุฑูุท ุงููุชุนุฏุฏุฉ ูู ุฌููุฉ ุดุฑุทูุฉ."
        },
        {
            question: "ุฃู ูู ุงูุฎูุงุฑุงุช ุงูุชุงููุฉ ููุซู ุจูุงู ูู ุงูููุน ุฎุฑุงุฆุท Mapุ",
            options: ["username: 'mohamed'", "'mohamed'", "mohamed"],
            answer: "username: 'mohamed'",
            explanation: "ููุซู ุจูุงู ุฎุฑูุทุฉ ุญูุซ `username` ูู ุงูููุชุงุญ ู`'mohamed'` ูู ุงููููุฉ."
        },
        {
            question: "ูุณุชุฎุฏู ุงูุดูู ...... ููุชุนุจูุฑ ุนู ุงูุนูููุงุช ูู ุฎุฑุงุฆุท ุงูุชุฏูู.",
            options: ["ุงููุณุชุทูู (Rectangle)", "ุงูุจูุถุงูู (Oval)", "ุงููุนูู (Rhombus)"],
            answer: "ุงููุณุชุทูู (Rectangle)",
            explanation: "ููุณุชุฎุฏู ุงูุดูู ุงููุณุชุทูู ูุชูุซูู ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ุฃู ุงููุนุงูุฌุฉ ูู ุฎุฑุงุฆุท ุงูุชุฏูู."
        },
        {
            question: "ุชุนุชุจุฑ ุงูุนูุงูุฉ .... ูู ูุดููุงุช ูุบุฉ Dart ุงููุณุคูุฉ ุนู ุฅุฌุฑุงุก ุนูููุฉ ุฏูุฌ ุงููุตูุต.",
            options: ["&", "+", "*"],
            answer: "+",
            explanation: "ุชุณุชุฎุฏู ุนูุงูุฉ `+` ูุฏูุฌ ุงููุตูุต (String Concatenation) ูู ูุบุฉ Dart."
        },
        {
            question: "ุงูุชุบููุฑ ...... ูุณุชุฎุฏู ูุฒูุงุฏุฉ ุงูุฑูู 5 ุจููุฏุงุฑ 1.",
            options: ["++5", "+5", "1 + 5"],
            answer: "++5",
            explanation: "`++5` (ุฃู `5++`) ุชูุณุชุฎุฏู ูุฒูุงุฏุฉ ุงูุฑูู ุจููุฏุงุฑ 1 (Increment operator)."
        },
        {
            question: "ุงูุฅุนูุงู ุนู ูุชุบูุฑ ูุดูู ูุงุฆูุฉ ูู ุงููุตูุต ูุณุชุฎุฏู ุงูุชุบูุฑ ...... ููุฅุนูุงู.",
            options: ["List<String>", "Map", "Array<String>"],
            answer: "List<String>",
            explanation: "ููุณุชุฎุฏู `List<String>` ููุฅุนูุงู ุนู ูุงุฆูุฉ (List) ุชุญุชูู ุนูู ุนูุงุตุฑ ูู ููุน String (ูุตูุต)."
        }
    ];

    let currentQuestionIndex = 0;
    let score = 0;
    let userAnswers = []; // To store user's choices and correct answers for review

    const startQuizBtn = document.getElementById('startQuizBtn');
    const quizContainer = document.getElementById('quiz-container');
    const questionCard = document.getElementById('question-card');
    const currentQuestionElem = document.getElementById('currentQuestion');
    const quizOptionsElem = document.getElementById('quizOptions');
    const feedbackMessageElem = document.getElementById('feedbackMessage');
    const explanationTextElem = document.getElementById('explanationText');
    const progressBar = document.getElementById('progressBar');
    const nextQuestionBtn = document.getElementById('nextQuestionBtn');
    const quizResultsElem = document.getElementById('quiz-results');
    const scoreDisplay = document.getElementById('scoreDisplay');
    const totalQuestionsDisplay = document.getElementById('totalQuestionsDisplay');
    const reviewAnswersElem = document.getElementById('reviewAnswers');
    const retakeQuizBtn = document.getElementById('retakeQuizBtn');

    function startQuiz() {
        startQuizBtn.style.display = 'none';
        quizContainer.style.display = 'block';
        currentQuestionIndex = 0;
        score = 0;
        userAnswers = [];
        quizResultsElem.style.display = 'none'; // Hide results if visible
        questionCard.style.display = 'block'; // Ensure question card is visible
        loadQuestion();
    }

    function loadQuestion() {
        if (currentQuestionIndex < questions.length) {
            const q = questions[currentQuestionIndex];
            currentQuestionElem.textContent = q.question;
            quizOptionsElem.innerHTML = ''; // Clear previous options
            feedbackMessageElem.textContent = ''; // Clear previous feedback
            explanationTextElem.style.display = 'none'; // Hide explanation

            // Enable next button only after an answer is selected
            nextQuestionBtn.disabled = true;

            q.options.forEach(option => {
                const li = document.createElement('li');
                li.textContent = option;
                li.addEventListener('click', () => selectAnswer(li, option, q.answer, q.explanation));
                quizOptionsElem.appendChild(li);
            });
            updateProgressBar();
        } else {
            showResults();
        }
    }

    function selectAnswer(selectedLi, selectedOption, correctAnswer, explanation) {
        // Disable all options after selection
        Array.from(quizOptionsElem.children).forEach(li => {
            li.style.pointerEvents = 'none'; // Disable click
            li.classList.remove('correct', 'incorrect'); // Clear previous highlights
        });

        const isCorrect = Array.isArray(correctAnswer) ? correctAnswer.includes(selectedOption) : selectedOption === correctAnswer;
        
        let feedbackMessage = '';
        if (isCorrect) {
            selectedLi.classList.add('correct');
            feedbackMessage = 'ุฅุฌุงุจุฉ ุตุญูุญุฉ!';
            score++;
        } else {
            selectedLi.classList.add('incorrect');
            feedbackMessage = 'ุฅุฌุงุจุฉ ุฎุงุทุฆุฉ.';
            // Highlight the correct answer if it's a single correct answer
            if (!Array.isArray(correctAnswer)) {
                Array.from(quizOptionsElem.children).forEach(li => {
                    if (li.textContent === correctAnswer) {
                        li.classList.add('correct');
                    }
                });
            } else { // Handle multiple correct answers highlighting
                Array.from(quizOptionsElem.children).forEach(li => {
                    if (correctAnswer.includes(li.textContent)) {
                        li.classList.add('correct');
                    }
                });
            }
        }
        
        feedbackMessageElem.textContent = feedbackMessage;
        explanationTextElem.textContent = `ุงูุชูุณูุฑ: ${explanation}`;
        explanationTextElem.style.display = 'block';

        // Store the user's answer for review
        userAnswers.push({
            question: questions[currentQuestionIndex].question,
            selected: selectedOption,
            correct: correctAnswer,
            isCorrect: isCorrect,
            explanation: explanation
        });

        // Enable next button
        nextQuestionBtn.disabled = false;
    }

    function nextQuestion() {
        currentQuestionIndex++;
        loadQuestion();
    }

    function updateProgressBar() {
        const progress = ((currentQuestionIndex) / questions.length) * 100;
        progressBar.style.width = `${progress}%`;
    }

    function showResults() {
        quizContainer.style.display = 'none';
        questionCard.style.display = 'none'; // Hide current question card
        quizResultsElem.style.display = 'block';

        scoreDisplay.textContent = score;
        totalQuestionsDisplay.textContent = questions.length;
        reviewAnswersElem.innerHTML = '<h3>ูุฑุงุฌุนุฉ ุงูุฅุฌุงุจุงุช:</h3>'; // Reset review section

        userAnswers.forEach((item, index) => {
            const reviewItem = document.createElement('div');
            reviewItem.classList.add('review-item');
            
            const qText = document.createElement('p');
            qText.classList.add('review-question');
            qText.textContent = `${index + 1}. ${item.question}`;
            reviewItem.appendChild(qText);

            const userAnswerText = document.createElement('p');
            userAnswerText.classList.add('review-user-answer');
            userAnswerText.textContent = `ุฅุฌุงุจุชู: ${item.selected}`;
            userAnswerText.style.color = item.isCorrect ? '#4CAF50' : '#f44336'; // Green for correct, red for incorrect
            reviewItem.appendChild(userAnswerText);

            const correctAnswerText = document.createElement('p');
            correctAnswerText.classList.add('review-correct-answer');
            correctAnswerText.textContent = `ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ: ${Array.isArray(item.correct) ? item.correct.join(' ุฃู ') : item.correct}`;
            reviewItem.appendChild(correctAnswerText);

            const explanationText = document.createElement('p');
            explanationText.classList.add('review-explanation');
            explanationText.textContent = `ุงูุชูุณูุฑ: ${item.explanation}`;
            reviewItem.appendChild(explanationText);

            reviewAnswersElem.appendChild(reviewItem);
        });
    }

    function retakeQuiz() {
        startQuiz(); // Simply restart the quiz
    }

    // Event Listeners
    startQuizBtn.addEventListener('click', startQuiz);
    nextQuestionBtn.addEventListener('click', nextQuestion);
    retakeQuizBtn.addEventListener('click', retakeQuiz);

    // Initial state: hide quiz and results, show start button
    quizContainer.style.display = 'none';
    quizResultsElem.style.display = 'none';
    questionCard.style.display = 'none'; // Hide the question card until quiz starts

});
// === ุฅุฏุงุฑุฉ ุงูุจูุฑ ุงูุซุงูู (ูุณุฎุฉ ุทุจู ุงูุฃุตู ูู ุงูุฃูู) ===
document.addEventListener('DOMContentLoaded', () => {
    // Dropdown functionality for navigation
    const dropdownToggle = document.querySelector('.dropdown-toggle');
    if (dropdownToggle) {
        dropdownToggle.addEventListener('click', (e) => {
            e.preventDefault(); // Prevent default link behavior
            const dropdownMenu = dropdownToggle.nextElementSibling;
            if (dropdownMenu && dropdownMenu.classList.contains('dropdown')) {
                dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
            }
        });
        // Close dropdown if clicked outside
        document.addEventListener('click', (e) => {
            if (!dropdownToggle.contains(e.target) && !e.target.closest('.dropdown')) {
                const dropdownMenu = dropdownToggle.nextElementSibling;
                if (dropdownMenu) {
                    dropdownMenu.style.display = 'none';
                }
            }
        });
    }
    // Quiz Data ููุจูุฑ ุงูุซุงูู
    const questions2 = [
        // ุฃุถู ุฃุณุฆูุชู ููุง (ูุซุงู)
         {
        question: "ูุง ุงููุธููุฉ ุงูุฃุณุงุณูุฉ ูุฃููุงุน ุงูุจูุงูุงุช ูู ุงูุจุฑูุฌุฉุ",
        options: [
            "ุชุญุฏูุฏ ููู ุงููุต ูู ุงููุงุฌูุฉ",
            "ุชุญุฏูุฏ ููุน ุงูููู ุงููุณููุญ ุจูุง ูุงูุนูููุงุช ุงูุชู ูููู ุฅุฌุฑุงุคูุง ุนูููุง",
            "ุชุญุณูู ุณุฑุนุฉ ุงูุฅูุชุฑูุช",
            "ุชุญุฏูุฏ ุนุฏุฏ ุงููุชุบูุฑุงุช ูู ุงูุจุฑูุงูุฌ"
        ],
        answer: "ุชุญุฏูุฏ ููุน ุงูููู ุงููุณููุญ ุจูุง ูุงูุนูููุงุช ุงูุชู ูููู ุฅุฌุฑุงุคูุง ุนูููุง",
        explanation: "ุฃููุงุน ุงูุจูุงูุงุช ุชุญุฏุฏ ูุง ูููู ุชุฎุฒููู (ุนุฏุฏุ ูุตุ ููุทูู...) ููุง ุงูุนูููุงุช ุงููุณููุญ ุจูุง (ุฌูุนุ ููุงุฑูุฉ...)ุ ููู ุฃุณุงุณู ูุตุญุฉ ูููุงุกุฉ ุงูุจุฑูุงูุฌ."
    },

    // ุงูุณุคุงู 2
    {
        question: "ุฃู ูู ุงูุชุงูู ููุณุชุฎุฏู ูุชุฎุฒูู ูููุฉ ูุซู 3.14ุ",
        options: [
            "Integer",
            "Boolean",
            "Float",
            "String"
        ],
        answer: "Float",
        explanation: "Float ููุณุชุฎุฏู ููุฃุนุฏุงุฏ ุงูุนุดุฑูุฉุ ุจูููุง Integer ููุฃุนุฏุงุฏ ุงูุตุญูุญุฉ ููุท."
    },

    // ุงูุณุคุงู 3
    {
        question: "ูุง ูุชูุฌุฉ ูุญุงููุฉ ูุณูุฉ ูุต ุนูู ุนุฏุฏ ูู ูุบุฉ ุชุฏุนู ุงูุชุญูู ูู ุฃููุงุน ุงูุจูุงูุงุชุ",
        options: [
            "ุชูููุฐ ุงูุนูููุฉ ูุชูุนุทู ูุชูุฌุฉ ุนุดูุงุฆูุฉ",
            "ุชูุนุทู ุชุญุฐูุฑูุง ููุท",
            "ุชูุณุจุจ ุฎุทุฃ ููุทูู ุฃู ุงุณุชุซูุงุก (Exception)",
            "ุชูุญููู ุงููุต ุชููุงุฆููุง ูุนุฏุฏ"
        ],
        answer: "ุชูุณุจุจ ุฎุทุฃ ููุทูู ุฃู ุงุณุชุซูุงุก (Exception)",
        explanation: "ุงูุนูููุงุช ุบูุฑ ุงููุนุฑูุฉ ุนูู ุฃููุงุน ุบูุฑ ูุชูุงููุฉ ุชูุณุจุจ ุฃุฎุทุงุก ูู ููุช ุงูุชุดุบูู ุฃู ุงูุชุฑุฌูุฉ."
    },

    // ุงูุณุคุงู 4
    {
        question: "ุฃู ูู ุฃููุงุน ุงูุจูุงูุงุช ุงูุชุงููุฉ ููุณุชุฎุฏู ูุชุฎุฒูู \"ูุฑุญุจุงู ุจุงูุนุงูู\"ุ",
        options: [
            "Boolean",
            "Array",
            "String",
            "Integer"
        ],
        answer: "String",
        explanation: "String ูู ุงูููุน ุงููุฎุตุต ูููุตูุต."
    },

    // ุงูุณุคุงู 5
    {
        question: "ูุง ุงููุงุฆุฏุฉ ุงูุฃุณุงุณูุฉ ูู ุงุณุชุฎุฏุงู ุฃููุงุน ุงูุจูุงูุงุช ูู ุชุฎุตูุต ุงูุฐุงูุฑุฉุ",
        options: [
            "ุชูููู ุนุฏุฏ ุงููุชุบูุฑุงุช",
            "ุชุญุณูู ุฃุฏุงุก ูุงุฌูุฉ ุงููุณุชุฎุฏู",
            "ุชุฎุตูุต ุงููุณุงุญุฉ ุงูููุงุณุจุฉ ูู ุงูุฐุงูุฑุฉ ุจูุงุกู ุนูู ููุน ุงูุจูุงูุงุช",
            "ููุน ุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช ุงูุนุงูููุฉ"
        ],
        answer: "ุชุฎุตูุต ุงููุณุงุญุฉ ุงูููุงุณุจุฉ ูู ุงูุฐุงูุฑุฉ ุจูุงุกู ุนูู ููุน ุงูุจูุงูุงุช",
        explanation: "ูู ููุน ุจูุงูุงุช ูู ุญุฌู ูุญุฏุฏ ูู ุงูุฐุงูุฑุฉ (ูุซู 4 ุจุงูุช ููู int)ุ ููุง ูุญุณู ุงูููุงุกุฉ."
    },

    // ุงูุณุคุงู 6
    {
        question: "ูุง ููุน ุงูุจูุงูุงุช ุงูุฃูุณุจ ูุชุฎุฒูู ูุฌููุนุฉ ูุซู [ุชูุงุญุ ุจุฑุชูุงู]ุ",
        options: [
            "Boolean",
            "String",
            "Array/List",
            "Float"
        ],
        answer: "Array/List",
        explanation: "ุงููุตูููุงุช ุฃู ุงูููุงุฆู ุชูุณุชุฎุฏู ูุชุฎุฒูู ูุฌููุนุงุช ูู ุงูุนูุงุตุฑ."
    },

    // ุงูุณุคุงู 7
    {
        question: "ูุง ููุน ุงูุจูุงูุงุช ุงูุฐู ููุฑุฌุนู ูุดุบู ุงูููุงุฑูุฉ ูุซู (5 > 3)ุ",
        options: [
            "Integer",
            "String",
            "Boolean",
            "Float"
        ],
        answer: "Boolean",
        explanation: "ูุชุงุฆุฌ ุงูููุงุฑูุงุช ุฏุงุฆููุง ููุทููุฉ: True ุฃู False."
    },

    // ุงูุณุคุงู 8
    {
        question: "ุฃู ูู ุงูุชุงูู ููุณ ูู ููุงุฆุฏ ุฃููุงุน ุงูุจูุงูุงุชุ",
        options: [
            "ููุน ุงูุฃุฎุทุงุก ุงูููุทููุฉ",
            "ุชุญุณูู ุฃุฏุงุก ุงูุจุฑูุงูุฌ",
            "ุชูููู ุญุฌู ุงูุดุงุดุฉ",
            "ุชุฎุตูุต ุงูุฐุงูุฑุฉ ุจููุงุกุฉ"
        ],
        answer: "ุชูููู ุญุฌู ุงูุดุงุดุฉ",
        explanation: "ุญุฌู ุงูุดุงุดุฉ ูุง ุนูุงูุฉ ูู ุจุฃููุงุน ุงูุจูุงูุงุช."
    },

    // ุงูุณุคุงู 9
    {
        question: "ูุง ููุน ุงูุจูุงูุงุช ุงูุฐู ููุณุชุฎุฏู ูุชุฎุฒูู ุงููููุชูู ููุท: True ุฃู Falseุ",
        options: [
            "String",
            "Integer",
            "Boolean",
            "Char"
        ],
        answer: "Boolean",
        explanation: "Boolean ูู ุงูููุน ุงููุญูุฏ ุงููุฎุตุต ููููู ุงูููุทููุฉ."
    },

    // ุงูุณุคุงู 10
    {
        question: "ูู ุณูุงู ุฃููุงุน ุงูุจูุงูุงุชุ ูุง ูุนูู \"ุงูุชุญูู ูู ุงูุฃุฎุทุงุก ูู ููุช ุงูุชุฑุฌูุฉ\"ุ",
        options: [
            "ุงูุชุดุงู ุงูุฃุฎุทุงุก ุฃุซูุงุก ุชุดุบูู ุงูุจุฑูุงูุฌ",
            "ุงูุชุดุงู ุงูุฃุฎุทุงุก ูุจู ุชูููุฐ ุงูุจุฑูุงูุฌ ุฃุซูุงุก ุงูุชุฑุฌูุฉ",
            "ุชุญุณูู ูุงุฌูุฉ ุงููุณุชุฎุฏู",
            "ุชูููู ุญุฌู ุงูููู ุงูุชูููุฐู"
        ],
        answer: "ุงูุชุดุงู ุงูุฃุฎุทุงุก ูุจู ุชูููุฐ ุงูุจุฑูุงูุฌ ุฃุซูุงุก ุงูุชุฑุฌูุฉ",
        explanation: "ุงููุบุงุช ุฐุงุช ุงูุชุญูู ุงูุซุงุจุช (ูุซู Java, C++) ุชูุชุดู ุฃุฎุทุงุก ุงูููุน ุฃุซูุงุก ุงูุชุฑุฌูุฉ."
    },

    // ุงูุณุคุงู 11
    {
        question: "ูุง ุชุนุฑูู ุงููุชุบูุฑ ูู ุงูุจุฑูุฌุฉุ",
        options: [
            "ูููุฉ ูุง ุชุชุบูุฑ ุฃุซูุงุก ุชูููุฐ ุงูุจุฑูุงูุฌ",
            "ุงุณู ุฑูุฒู ููููุน ูู ุงูุฐุงูุฑุฉ ูููู ุชุบููุฑ ูููุชู",
            "ุฏุงูุฉ ุชููู ุจุญุณุงุจ ูููุฉ ูุนููุฉ",
            "ููุน ุจูุงูุงุช ุซุงุจุช"
        ],
        answer: "ุงุณู ุฑูุฒู ููููุน ูู ุงูุฐุงูุฑุฉ ูููู ุชุบููุฑ ูููุชู",
        explanation: "ุงููุชุบูุฑ ุญุงููุฉ ูุงุจูุฉ ููุชุบููุฑ ูุชุฎุฒูู ุงูุจูุงูุงุช ุฃุซูุงุก ุงูุชูููุฐ."
    },

    // ุงูุณุคุงู 12
    {
        question: "ูุง ุงููุฑู ุงูุฌููุฑู ุจูู ุงููุชุบูุฑ ูุงูุซุงุจุชุ",
        options: [
            "ุงูุซุงุจุช ูุง ูููู ุชุบููุฑ ูููุชู ุจุนุฏ ุงูุชุนููู ุงูุฃููู",
            "ุงููุชุบูุฑ ูุง ูููู ุงุณุชุฎุฏุงูู ูู ุงูุนูููุงุช ุงูุญุณุงุจูุฉ",
            "ุงูุซุงุจุช ูุณุชุฎุฏู ููุท ูููุตูุต",
            "ุงููุชุบูุฑ ูุง ูุญุชุงุฌ ุฅูู ุงุณู"
        ],
        answer: "ุงูุซุงุจุช ูุง ูููู ุชุบููุฑ ูููุชู ุจุนุฏ ุงูุชุนููู ุงูุฃููู",
        explanation: "ุงูุซุงุจุช (Constant) ููุนุฑู ูุฑุฉ ูุงุญุฏุฉ ููุง ููุนุฏูุ ุจูููุง ุงููุชุบูุฑ ูุงุจู ููุชุบููุฑ."
    },

    // ุงูุณุคุงู 13
    {
        question: "ูุง ุฃูููุฉ ุงุณุชุฎุฏุงู ุงูุซูุงุจุช ูู ุงูุจุฑูุฌุฉุ",
        options: [
            "ุชุณุฑูุน ุชูููุฐ ุงูุญููุงุช",
            "ููุน ุงูุชุบููุฑุงุช ุบูุฑ ุงูููุตูุฏุฉ ูุชุญุณูู ูุงุจููุฉ ุงููุฑุงุกุฉ",
            "ุชูููู ุนุฏุฏ ุงูุณุทูุฑ ูู ุงูููุฏ",
            "ุชุญุณูู ูุงุฌูุฉ ุงููุณุชุฎุฏู"
        ],
        answer: "ููุน ุงูุชุบููุฑุงุช ุบูุฑ ุงูููุตูุฏุฉ ูุชุญุณูู ูุงุจููุฉ ุงููุฑุงุกุฉ",
        explanation: "ุงูุซูุงุจุช ุชูุนุทู ูุนูู ููููู (ูุซู TAX_RATE = 0.15) ูุชููุน ุงูุชุนุฏูู ุงูุนุฑุถู."
    },

    // ุงูุณุคุงู 14
    {
        question: "ุฃู ูู ุงูููุงุนุฏ ุงูุชุงููุฉ ุตุญูุญุฉ ูุชุณููุฉ ุงููุชุบูุฑุงุชุ",
        options: [
            "ูููู ุฃู ุชุจุฏุฃ ุจุงุณู ุฑูู",
            "ูููู ุฃู ุชุญุชูู ุนูู ูุณุงูุงุช",
            "ูุง ูููู ุฃู ุชููู ูููุฉ ูุญุฌูุฒุฉ",
            "ูุฌุจ ุฃู ุชููู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ููุท"
        ],
        answer: "ูุง ูููู ุฃู ุชููู ูููุฉ ูุญุฌูุฒุฉ",
        explanation: "ุฃุณูุงุก ุงููุชุบูุฑุงุช ูุง ูููู ุฃู ุชููู ูููุงุช ูุญุฌูุฒุฉ (ูุซู class, if)."
    },

    // ุงูุณุคุงู 15
    {
        question: "ูุง ุงูุบุฑุถ ูู ุงุณุชุฎุฏุงู ุฃุณูุงุก ุฐุงุช ูุนูู ูููุชุบูุฑุงุช ูุซู \"ุนุฏุฏ_ุงูุทูุงุจ\" ุจุฏูุงู ูู \"x\"ุ",
        options: [
            "ุชูููู ุญุฌู ุงูููู",
            "ุชุณุฑูุน ุชูููุฐ ุงูุจุฑูุงูุฌ",
            "ุชุญุณูู ูุงุจููุฉ ุงููุฑุงุกุฉ ูุงูุตูุงูุฉ",
            "ููุน ุงุณุชุฎุฏุงู ุงูุซูุงุจุช"
        ],
        answer: "ุชุญุณูู ูุงุจููุฉ ุงููุฑุงุกุฉ ูุงูุตูุงูุฉ",
        explanation: "ุงูุฃุณูุงุก ุงููุตููุฉ ุชูุณูู ููู ุงูููุฏ ูุตูุงูุชู."
    },

    // ุงูุณุคุงู 16
    {
        question: "ูุง ุงูุฐู ูุญุฏุซ ุฅุฐุง ุญุงููุช ุชุบููุฑ ูููุฉ ุซุงุจุช ุจุนุฏ ุชุนููููุงุ",
        options: [
            "ููุณูุญ ุจุฐูู ูู ุฌููุน ุงููุบุงุช",
            "ููุนุทู ุชุญุฐูุฑูุง ููุท",
            "ููุณุจุจ ุฎุทุฃ ูู ููุช ุงูุชุฑุฌูุฉ ุฃู ุงูุชุดุบูู",
            "ููุญูู ุงูุซุงุจุช ุชููุงุฆููุง ููุชุบูุฑ"
        ],
        answer: "ููุณุจุจ ุฎุทุฃ ูู ููุช ุงูุชุฑุฌูุฉ ุฃู ุงูุชุดุบูู",
        explanation: "ูุญุงููุฉ ุชุนุฏูู ุซุงุจุช ุชูุฎุงูู ููุงุนุฏ ุงูุจุฑูุฌุฉ ูุชูุณุจุจ ุฎุทุฃ."
    },

    // ุงูุณุคุงู 17
    {
        question: "ูุง ูุซุงู ููุงุณุจ ูุงุณุชุฎุฏุงู ุงูุซุงุจุชุ",
        options: [
            "ุชุฎุฒูู ุงุณู ุงููุณุชุฎุฏู",
            "ุชุฎุฒูู ูุชูุฌุฉ ุนูููุฉ ุญุณุงุจูุฉ ูุคูุชุฉ",
            "ุชุฎุฒูู ูููุฉ ฯ (ุจุงู)",
            "ุชุฎุฒูู ุนุฏุฏ ูุฑุงุช ุชูููุฐ ุญููุฉ"
        ],
        answer: "ุชุฎุฒูู ูููุฉ ฯ (ุจุงู)",
        explanation: "ุงูููู ุงูุฑูุงุถูุฉ ุฃู ุงููุธุงููุฉ ุงูุซุงุจุชุฉ ูู ุงูุฃูุณุจ ููุซูุงุจุช."
    },

    // ุงูุณุคุงู 18
    {
        question: "ูุง ุงูุฐู ูููุฒ ุงููุชุบูุฑ ูู ุญูุซ \"ุงููุฑููุฉ\"ุ",
        options: [
            "ูุง ูููู ุงุณุชุฎุฏุงูู ุฅูุง ูุฑุฉ ูุงุญุฏุฉ",
            "ูููู ุชุบููุฑ ูููุชู ุฃุซูุงุก ุชูููุฐ ุงูุจุฑูุงูุฌ",
            "ูุฌุจ ุฃู ูููู ูู ููุน Boolean",
            "ูุง ูููู ุงุณุชุฎุฏุงูู ูู ุงูุฏูุงู"
        ],
        answer: "ูููู ุชุบููุฑ ูููุชู ุฃุซูุงุก ุชูููุฐ ุงูุจุฑูุงูุฌ",
        explanation: "ุงููุฑููุฉ ุชุนูู ุงููุฏุฑุฉ ุนูู ุชุนุฏูู ุงููููุฉ ุญุณุจ ุณูุงู ุงูุจุฑูุงูุฌ."
    },

    // ุงูุณุคุงู 19
    {
        question: "ูุง ุงููุงุนุฏุฉ ุงูุตุญูุญุฉ ูุชุณููุฉ ุงููุชุบูุฑุงุช ูู ูุนุธู ุงููุบุงุชุ",
        options: [
            "ูุฌุจ ุฃู ุชุจุฏุฃ ุจุญุฑู ุฃู ุดุฑุทุฉ ุณูููุฉ",
            "ูุฌุจ ุฃู ุชุญุชูู ุนูู ุฑููุฒ ูุซู % ุฃู $",
            "ูููู ุฃู ุชููู ูููุฉ ูุญุฌูุฒุฉ",
            "ูุฌุจ ุฃู ุชููู ุจุฃุญุฑู ูุจูุฑุฉ ููุท"
        ],
        answer: "ูุฌุจ ุฃู ุชุจุฏุฃ ุจุญุฑู ุฃู ุดุฑุทุฉ ุณูููุฉ",
        explanation: "ูุฐู ูุงุนุฏุฉ ุนุงูููุฉ ุชูุฑูุจูุง ูู ุฌููุน ูุบุงุช ุงูุจุฑูุฌุฉ."
    },

    // ุงูุณุคุงู 20
    {
        question: "ูุง ุงูุบุฑุถ ูู \"ุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู\" ูู ุณูุงู ุงููุชุบูุฑุงุชุ",
        options: [
            "ุงุณุชุฎุฏุงู ููุณ ุงูุงุณู ููุชุบูุฑุงุช ูุฎุชููุฉ",
            "ุงุณุชุฎุฏุงู ููุณ ุงููุชุบูุฑ ูุชุฎุฒูู ููู ูุฎุชููุฉ ูู ุฃููุงุช ูุฎุชููุฉ",
            "ุญุฐู ุงููุชุบูุฑ ุจุนุฏ ุงุณุชุฎุฏุงูู",
            "ุชุญููู ุงููุชุบูุฑ ูุซุงุจุช"
        ],
        answer: "ุงุณุชุฎุฏุงู ููุณ ุงููุชุบูุฑ ูุชุฎุฒูู ููู ูุฎุชููุฉ ูู ุฃููุงุช ูุฎุชููุฉ",
        explanation: "ุงููุชุบูุฑ ููุนุงุฏ ุงุณุชุฎุฏุงูู ูุชุฎุฒูู ููู ูุชุนุฏุฏุฉ ุฎูุงู ุนูุฑ ุงูุจุฑูุงูุฌ."
    },

    // ุงูุณุคุงู 21
    {
        question: "ูุง ูุชูุฌุฉ ุงูุนูููุฉ: 10 % 3ุ",
        options: ["3", "1", "0", "3.33"],
        answer: "1",
        explanation: "% = ุจุงูู ุงููุณูุฉ โ 10 รท 3 = 3 ูุงูุจุงูู 1."
    },

    // ุงูุณุคุงู 22
    {
        question: "ูุง ููุน ุงููุดุบู ุงููุณุชุฎุฏู ูู ุงูุชุนุจูุฑ: (x > 5)ุ",
        options: ["ุญุณุงุจู", "ููุทูู", "ููุงุฑูุฉ", "ุชุนููู"],
        answer: "ููุงุฑูุฉ",
        explanation: "> ูู ูุดุบู ููุงุฑูุฉ ููุฑุฌุน ูููุฉ ููุทููุฉ."
    },

    // ุงูุณุคุงู 23
    {
        question: "ูุง ูุชูุฌุฉ: (True and False)ุ",
        options: ["True", "False", "1", "Error"],
        answer: "False",
        explanation: "AND ููุฑุฌุน True ููุท ุฅุฐุง ูุงูุช ููุง ุงููููุชูู True."
    },

    // ุงูุณุคุงู 24
    {
        question: "ูุง ูุชูุฌุฉ: not (5 > 3)ุ",
        options: ["True", "False", "2", "None"],
        answer: "False",
        explanation: "5>3 = True โ not True = False."
    },

    // ุงูุณุคุงู 25
    {
        question: "ูุง ุงููุดุบู ุงูุฐู ูุฌูุน ุจูู ุดุฑุทูู ูููุฑุฌุน True ุฅุฐุง ูุงู ุฃุญุฏููุง ุนูู ุงูุฃูู ุตุญูุญูุงุ",
        options: ["and", "or", "not", "xor"],
        answer: "or",
        explanation: "OR ููุฑุฌุน True ุฅุฐุง ูุงู ุฃุญุฏ ุงูุดุฑุทูู ุฃู ููุงููุง ุตุญูุญูุง."
    },

    // ุงูุณุคุงู 26
    {
        question: "ูุง ูุชูุฌุฉ: x = 5 ุซู x += 3ุ",
        options: ["x = 5", "x = 8", "x = 3", "ุฎุทุฃ"],
        answer: "x = 8",
        explanation: "+= ูุนูู x = x + 3 โ 5 + 3 = 8."
    },

    // ุงูุณุคุงู 27
    {
        question: "ูุง ููุน ุงููุดุบู ูู: x == yุ",
        options: ["ุชุนููู", "ููุงุฑูุฉ", "ุญุณุงุจู", "ููุทูู"],
        answer: "ููุงุฑูุฉ",
        explanation: "== ููููุงุฑูุฉุ = ููุชุนููู."
    },

    // ุงูุณุคุงู 28
    {
        question: "ูุง ุงููุฑู ุจูู = ู ==ุ",
        options: [
            "ูุง ููุฌุฏ ูุฑู",
            "= ููุชุนูููุ == ููููุงุฑูุฉ",
            "= ููููุงุฑูุฉุ == ููุชุนููู",
            "ููุงููุง ููุญุณุงุจ"
        ],
        answer: "= ููุชุนูููุ == ููููุงุฑูุฉ",
        explanation: "ุงูุฎูุท ุจููููุง ุณุจุจ ุดุงุฆุน ููุฃุฎุทุงุก ุงูููุทููุฉ."
    },

    // ุงูุณุคุงู 29
    {
        question: "ูุง ูุชูุฌุฉ: (10 < 5) or (3 == 3)ุ",
        options: ["True", "False", "0", "Error"],
        answer: "True",
        explanation: "(3==3) = True โ OR ููุฑุฌุน True."
    },

    // ุงูุณุคุงู 30
    {
        question: "ูุง ุงููุดุบู ุงูุฐู ููุณุชุฎุฏู ูุฑูุน ุนุฏุฏ ูููุฉ ุฃุฎุฑูุ",
        options: ["*", "**", "^", "%"],
        answer: "**",
        explanation: "ูู ุจุงูุซูู ูุบูุฑูุง: 2**3 = 8. (ูู C++/Java ููุณุชุฎุฏู pow())."
    },

    // ุงูุณุคุงู 31
    {
        question: "ูุง ุงูุบุฑุถ ุงูุฃุณุงุณู ูู ุงูุฏูุงูุ",
        options: [
            "ุฑุณู ูุงุฌูุงุช ุงููุณุชุฎุฏู",
            "ุชูููุฐ ูููุฉ ูุญุฏุฏุฉ ูุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงูููุฏ",
            "ุชุฎุฒูู ุงูุซูุงุจุช ููุท",
            "ุชุบููุฑ ุฃููุงุน ุงูุจูุงูุงุช"
        ],
        answer: "ุชูููุฐ ูููุฉ ูุญุฏุฏุฉ ูุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงูููุฏ",
        explanation: "ุงูุฏูุงู ุชูุณุชุฎุฏู ูุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู ูุชูุณูู ุงูุจุฑูุงูุฌ ููุญุฏุงุช."
    },

    // ุงูุณุคุงู 32
    {
        question: "ูุง ุงูุนูุตุฑ ุงูุงุฎุชูุงุฑู ูู ููููุงุช ุงูุฏุงูุฉุ",
        options: ["ุงุณู ุงูุฏุงูุฉ", "ุงููุนููุงุช", "ุฌุณู ุงูุฏุงูุฉ", "ูููุฉ ุงูุฅุฑุฌุงุน"],
        answer: "ูููุฉ ุงูุฅุฑุฌุงุน",
        explanation: "ุงูุฏูุงู ูู ููุน void ูุง ุชูุฑุฌุน ูููุฉ."
    },

    // ุงูุณุคุงู 33
    {
        question: "ูุง ูุงุฆุฏุฉ \"ุชุฌุฑูุฏ ุงูุชูููุฐ\" ูู ุงูุฏูุงูุ",
        options: [
            "ุฅุฎูุงุก ุงูุชูุงุตูู ูุนุฑุถ ููุท ูุง ุชูุนูู ุงูุฏุงูุฉ",
            "ุฌุนู ุงูููุฏ ุฃุทูู",
            "ููุน ุงุณุชุฎุฏุงู ุงููุนููุงุช",
            "ุฅุฌุจุงุฑ ุงูุฏุงูุฉ ุนูู ุฅุฑุฌุงุน ูููุฉ"
        ],
        answer: "ุฅุฎูุงุก ุงูุชูุงุตูู ูุนุฑุถ ููุท ูุง ุชูุนูู ุงูุฏุงูุฉ",
        explanation: "ุงูุชุฌุฑูุฏ ููุณูู ุงูุงุณุชุฎุฏุงู ุฏูู ุงูุญุงุฌุฉ ูููู ุงูุชูุงุตูู ุงูุฏุงุฎููุฉ."
    },

    // ุงูุณุคุงู 34
    {
        question: "ูุง ุงูุฐู ูุญุฏุซ ุนูุฏ ุงุณุชุฏุนุงุก ุฏุงูุฉุ",
        options: [
            "ูุชู ุญุฐู ุงูุฏุงูุฉ ูู ุงูุฐุงูุฑุฉ",
            "ูุชู ุชูููุฐ ุงูููุฏ ุฏุงุฎู ุฌุณู ุงูุฏุงูุฉ",
            "ูุชู ุชุบููุฑ ููุน ุงูุจูุงูุงุช",
            "ูุชู ุฅูุดุงุก ูุชุบูุฑ ุฌุฏูุฏ ุชููุงุฆููุง"
        ],
        answer: "ูุชู ุชูููุฐ ุงูููุฏ ุฏุงุฎู ุฌุณู ุงูุฏุงูุฉ",
        explanation: "ุงูุงุณุชุฏุนุงุก = ุชูููุฐ ุงูุชุนูููุงุช ุงูููุชูุจุฉ ูู ุฌุณู ุงูุฏุงูุฉ."
    },

    // ุงูุณุคุงู 35
    {
        question: "ูุง ุงุณู ุงูููู ุงูุชู ุชููุฑุฑ ููุฏุงูุฉ ุนูุฏ ุงุณุชุฏุนุงุฆูุงุ",
        options: ["ุซูุงุจุช", "ูุชุบูุฑุงุช ุนุงูููุฉ", "ูุนููุงุช (Parameters)", "ูุดุบูุงุช"],
        answer: "ูุนููุงุช (Parameters)",
        explanation: "ุงููุนููุงุช ูู ุงููุฏุฎูุงุช ุงูุชู ุชุณุชูุจููุง ุงูุฏุงูุฉ."
    },

    // ุงูุณุคุงู 36
    {
        question: "ูุง ููุฒุฉ \"ุณูููุฉ ุงูุตูุงูุฉ\" ูู ุงุณุชุฎุฏุงู ุงูุฏูุงูุ",
        options: [
            "ูููู ุชุนุฏูู ุงูุฏุงูุฉ ูู ููุงู ูุงุญุฏ ูุฅุตูุงุญ ุฎุทุฃ",
            "ูุง ุชุญุชุงุฌ ุงูุฏุงูุฉ ููุงุฎุชุจุงุฑ",
            "ุงูุฏุงูุฉ ูุง ูููู ุชุนุฏูููุง",
            "ุงูุฏุงูุฉ ุชุนูู ููุท ูู ูุบุฉ ูุงุญุฏุฉ"
        ],
        answer: "ูููู ุชุนุฏูู ุงูุฏุงูุฉ ูู ููุงู ูุงุญุฏ ูุฅุตูุงุญ ุฎุทุฃ",
        explanation: "ุงูุชุตุญูุญ ูู ููุงู ูุงุญุฏ ููุนูุณ ุนูู ูู ุงูุงุณุชุฏุนุงุกุงุช."
    },

    // ุงูุณุคุงู 37
    {
        question: "ูุง ุงูุฐู ูููุฒ ุงูุฏุงูุฉ ุนู ุงููุชุบูุฑุ",
        options: [
            "ุงูุฏุงูุฉ ุชุฎุฒู ูููุฉ ูุงุญุฏุฉ ููุท",
            "ุงูุฏุงูุฉ ุชููุฐ ูุฌููุนุฉ ูู ุงูุฃูุงูุฑ",
            "ุงูุฏุงูุฉ ูุง ูููู ุชุณููุชูุง",
            "ุงูุฏุงูุฉ ูุง ุชุณุชุฎุฏู ูู ุงูุญุณุงุจุงุช"
        ],
        answer: "ุงูุฏุงูุฉ ุชููุฐ ูุฌููุนุฉ ูู ุงูุฃูุงูุฑ",
        explanation: "ุงูุฏุงูุฉ ุชููุฐ ููุทููุงุ ุงููุชุบูุฑ ูุฎุฒู ุจูุงูุงุช."
    },

    // ุงูุณุคุงู 38
    {
        question: "ูุง ูุชูุฌุฉ ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุง ุชูุฑุฌุน ูููุฉุ",
        options: [
            "ุฎุทุฃ ุฏุงุฆููุง",
            "ูุง ุชูุฑุฌุน ุดูุฆูุง (None ุฃู Void)",
            "ุชูุฑุฌุน 0 ุฏุงุฆููุง",
            "ุชูุฑุฌุน ุขุฎุฑ ูููุฉ ูุญุณุจุฉ"
        ],
        answer: "ูุง ุชูุฑุฌุน ุดูุฆูุง (None ุฃู Void)",
        explanation: "ุงูุฏูุงู void ูุง ุชูุฑุฌุน ูููุฉ."
    },

    // ุงูุณุคุงู 39
    {
        question: "ูุง ุฃูููุฉ \"ุชูุธูู ุงูููุฏ\" ุจุงุณุชุฎุฏุงู ุงูุฏูุงูุ",
        options: [
            "ุฌุนู ุงูุจุฑูุงูุฌ ุฃุจุทุฃ",
            "ุชูุณูู ุงูููุงู ุงููุนูุฏุฉ ุฅูู ูุญุฏุงุช ุฃุตุบุฑ",
            "ุฒูุงุฏุฉ ุนุฏุฏ ุงูุฃุฎุทุงุก",
            "ููุน ุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช"
        ],
        answer: "ุชูุณูู ุงูููุงู ุงููุนูุฏุฉ ุฅูู ูุญุฏุงุช ุฃุตุบุฑ",
        explanation: "ุงูุชูุณูู ููุณูู ุงูููู ูุงูุตูุงูุฉ ูุงูุชุทููุฑ."
    },

    // ุงูุณุคุงู 40
    {
        question: "ูุง ุงูุฐู ููุณูู ุจู \"Function Body\"ุ",
        options: [
            "ุงุณู ุงูุฏุงูุฉ",
            "ูุงุฆูุฉ ุงููุนููุงุช",
            "ูุฌููุนุฉ ุงูุชุนูููุงุช ุงูุชู ุชููุฐูุง ุงูุฏุงูุฉ",
            "ูููุฉ ุงูุฅุฑุฌุงุน ููุท"
        ],
        answer: "ูุฌููุนุฉ ุงูุชุนูููุงุช ุงูุชู ุชููุฐูุง ุงูุฏุงูุฉ",
        explanation: "ุฌุณู ุงูุฏุงูุฉ ูู ุงูููุฏ ุงูุฐู ููููุฐ ุนูุฏ ุงูุงุณุชุฏุนุงุก."
    },

    // ุงูุณุคุงู 41
    {
        question: "ูุง ุงูุบุฑุถ ูู ุฌููุฉ ifุ",
        options: [
            "ุชูููุฐ ูุชูุฉ ููุฏ ุจุดูู ูุชูุฑุฑ",
            "ุชูููุฐ ูุชูุฉ ููุฏ ุฅุฐุง ูุงู ุงูุดุฑุท ุตุญูุญูุง",
            "ุฅููุงู ุงูุจุฑูุงูุฌ",
            "ุชุนุฑูู ูุชุบูุฑ ุฌุฏูุฏ"
        ],
        answer: "ุชูููุฐ ูุชูุฉ ููุฏ ุฅุฐุง ูุงู ุงูุดุฑุท ุตุญูุญูุง",
        explanation: "if ุชูุณุชุฎุฏู ูุงุชุฎุงุฐ ูุฑุงุฑ ุจูุงุกู ุนูู ุดุฑุท ููุทูู."
    },

    // ุงูุณุคุงู 42
    {
        question: "ูุง ุงููุฑู ุจูู if ู if-elseุ",
        options: [
            "ูุง ููุฌุฏ ูุฑู",
            "if-else ุชููุฐ ูุชูุฉ ุจุฏููุฉ ุฅุฐุง ูุงู ุงูุดุฑุท ุฎุงุทุฆูุง",
            "if ูุง ูููู ุงุณุชุฎุฏุงููุง ูุน Boolean",
            "if-else ุฃุณุฑุน ุฏุงุฆููุง"
        ],
        answer: "if-else ุชููุฐ ูุชูุฉ ุจุฏููุฉ ุฅุฐุง ูุงู ุงูุดุฑุท ุฎุงุทุฆูุง",
        explanation: "else ุชููุฑ ูุณุงุฑูุง ุจุฏูููุง ุนูุฏ ุนุฏู ุชุญูู ุงูุดุฑุท."
    },

    // ุงูุณุคุงู 43
    {
        question: "ูุชู ูููุถู ุงุณุชุฎุฏุงู switch ุจุฏู if-else-ifุ",
        options: [
            "ุนูุฏ ูุฌูุฏ ุดุฑุท ููุทูู ูุนูุฏ",
            "ุนูุฏ ุงูููุงุฑูุฉ ุจูููุฉ ูุงุญุฏุฉ ููุงุจู ุนุฏุฉ ููู ุซุงุจุชุฉ",
            "ุนูุฏ ูุฌูุฏ ุนูููุงุช ุญุณุงุจูุฉ",
            "ุนูุฏ ุงุณุชุฎุฏุงู ููู ุนุงุฆูุฉ"
        ],
        answer: "ุนูุฏ ุงูููุงุฑูุฉ ุจูููุฉ ูุงุญุฏุฉ ููุงุจู ุนุฏุฉ ููู ุซุงุจุชุฉ",
        explanation: "switch ูุซุงูู ููููุงุฑูุฉ ุจูููุฉ ูุงุญุฏุฉ ุถุฏ ุนุฏุฉ ุญุงูุงุช (ูุซู ุฃูุงู ุงูุฃุณุจูุน)."
    },

    // ุงูุณุคุงู 44
    {
        question: "ูุง ูุชูุฌุฉ ุชูููุฐ ููุฏ ูุง ูุญุชูู ุนูู ุฌูู ุชุญููุ",
        options: [
            "ููููุฐ ุจุดูู ุชุณูุณูู ูู ุงูุฃุนูู ููุฃุณูู",
            "ูุชููู ููุฑูุง",
            "ููุนูุฏ ุงูุชุดุบูู ุชููุงุฆููุง",
            "ููุณุจุจ ุฎุทุฃ ููุทูู"
        ],
        answer: "ููููุฐ ุจุดูู ุชุณูุณูู ูู ุงูุฃุนูู ููุฃุณูู",
        explanation: "ุจุฏูู ุฌูู ุชุญููุ ุงูููุฏ ูููุฐ ุณุทุฑุงู ุณุทุฑุงู ุจุงูุชุณูุณู."
    },

    // ุงูุณุคุงู 45
    {
        question: "ุฃู ูู ุงูุชุงูู ููุณุชุฎุฏู ูุงุฎุชุจุงุฑ ุนุฏุฉ ุดุฑูุท ุจุงูุชุณูุณูุ",
        options: ["if ููุท", "switch", "if-else-if", "for"],
        answer: "if-else-if",
        explanation: "if-else-if ุชุณูุญ ุจุงุฎุชุจุงุฑ ุดุฑูุท ูุชุนุฏุฏุฉ ุญุชู ูุชุญูู ุฃุญุฏูุง."
    },

    // ุงูุณุคุงู 46
    {
        question: "ูุง ุงูุฐู ููุณุจุจ \"ุงูุชูุฑุน\" ูู ุงูุจุฑูุงูุฌุ",
        options: [
            "ุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช",
            "ุงุณุชุฎุฏุงู ุฌูู ุงูุชุญูู ุงูุดุฑุทูุฉ",
            "ุงุณุชุฎุฏุงู ุงูุซูุงุจุช",
            "ุงุณุชุฎุฏุงู ุงูุนูููุงุช ุงูุญุณุงุจูุฉ"
        ],
        answer: "ุงุณุชุฎุฏุงู ุฌูู ุงูุชุญูู ุงูุดุฑุทูุฉ",
        explanation: "ุฌูู if/else/switch ุชูุณุจุจ ุชูุฑุนูุง ูู ูุณุงุฑ ุงูุชูููุฐ."
    },

    // ุงูุณุคุงู 47
    {
        question: "ูุง ุงูุฎุทุฃ ุงูุดุงุฆุน ูู ูุชุงุจุฉ if ุจุฏูู ุฃููุงุณ ุนูุฏ ูุฌูุฏ ุฃูุซุฑ ูู ุณุทุฑุ",
        options: [
            "ุชูููุฐ ุงูุณุทุฑ ุงูุฃูู ููุท",
            "ุชูููุฐ ุฌููุน ุงูุณุทูุฑ",
            "ุชููู ุงูุจุฑูุงูุฌ",
            "ูุง ููุฌุฏ ุฎุทุฃ"
        ],
        answer: "ุชูููุฐ ุงูุณุทุฑ ุงูุฃูู ููุท",
        explanation: "ูู ุจุนุถ ุงููุบุงุชุ ุจุฏูู ุฃููุงุณุ ููุท ุงูุณุทุฑ ุงูุชุงูู ููุนุชุจุฑ ุฏุงุฎู if."
    },

    // ุงูุณุคุงู 48
    {
        question: "ูุง ุงูุบุฑุถ ูู else ูู ุฌููุฉ if-elseุ",
        options: [
            "ุชูููุฐ ููุฏ ุฅุถุงูู ุฏุงุฆููุง",
            "ุชูููุฐ ููุฏ ุจุฏูู ุนูุฏ ุนุฏู ุชุญูู ุงูุดุฑุท",
            "ุฅููุงุก ุงูุจุฑูุงูุฌ",
            "ุชุนุฑูู ูุชุบูุฑ ุฌุฏูุฏ"
        ],
        answer: "ุชูููุฐ ููุฏ ุจุฏูู ุนูุฏ ุนุฏู ุชุญูู ุงูุดุฑุท",
        explanation: "else ุชููุฑ ูุณุงุฑูุง ุจุฏููุงู ุนูุฏูุง ูููู ุงูุดุฑุท False."
    },

    // ุงูุณุคุงู 49
    {
        question: "ุฃู ูู ุงูุชุงูู ููุณุชุฎุฏู ูููุงุฑูุฉ ูุทุงูุงุช ูููุ",
        options: ["switch", "if-else-if", "for", "while"],
        answer: "if-else-if",
        explanation: "switch ูุง ูุฏุนู ุงูููุงุฑูุฉ ุจุงููุทุงูุงุช (ูุซู x > 10)ุ ุจูููุง if-else-if ูุฏุนููุง."
    },

    // ุงูุณุคุงู 50
    {
        question: "ูุง ูุชูุฌุฉ: if (False): print(\"A\") else: print(\"B\")ุ",
        options: ["A", "B", "ูุง ุดูุก", "ุฎุทุฃ"],
        answer: "B",
        explanation: "ุจูุง ุฃู ุงูุดุฑุท Falseุ ููููุฐ ููุฏ else."
    },

    // ุงูุณุคุงู 51
    {
        question: "ูุง ุงููุฑู ุจูู for ู whileุ",
        options: [
            "for ุชุณุชุฎุฏู ุนูุฏูุง ูุง ูุนุฑู ุนุฏุฏ ุงูุชูุฑุงุฑุงุช",
            "while ุชุณุชุฎุฏู ุนูุฏูุง ูุนุฑู ุนุฏุฏ ุงูุชูุฑุงุฑุงุช",
            "for ูุนุฏุฏ ูุนุฑููุ while ูุดุฑุท ููุทูู",
            "ูุง ูุฑู ุจููููุง"
        ],
        answer: "for ูุนุฏุฏ ูุนุฑููุ while ูุดุฑุท ููุทูู",
        explanation: "for ููุชูุฑุงุฑ ุงููุนุฑูู (ูุซู ูุงุฆูุฉ)ุ while ูุดุฑุท ุบูุฑ ูุนุฑูู ุงูุนุฏุฏ."
    },

    // ุงูุณุคุงู 52
    {
        question: "ูุง ูุชูุฌุฉ ุชูููุฐ: while (False): print(\"Hi\")ุ",
        options: ["ุทุจุงุนุฉ \"Hi\" ูุฑุฉ ูุงุญุฏุฉ", "ูุง ููุทุจุน ุดูุก", "ุทุจุงุนุฉ \"Hi\" ุฅูู ูุง ูุง ููุงูุฉ", "ุฎุทุฃ"],
        answer: "ูุง ููุทุจุน ุดูุก",
        explanation: "ุงูุดุฑุท False ูู ุงูุจุฏุงูุฉุ ููุง ูุฏุฎู ุงูุญููุฉ."
    },

    // ุงูุณุคุงู 53
    {
        question: "ูุง ุงูุบุฑุถ ูู break ูู ุงูุญููุงุชุ",
        options: ["ุชุฎุทู ุงูุชูุฑุงุฑ ุงูุญุงูู", "ุฅููุงุก ุงูุญููุฉ ููุฑูุง", "ุฅุนุงุฏุฉ ุชุดุบูู ุงูุญููุฉ", "ุทุจุงุนุฉ ูููุฉ"],
        answer: "ุฅููุงุก ุงูุญููุฉ ููุฑูุง",
        explanation: "break ููููู ุงูุญููุฉ ููุฑูุง ุจุบุถ ุงููุธุฑ ุนู ุงูุดุฑุท."
    },

    // ุงูุณุคุงู 54
    {
        question: "ูุง ุงูุบุฑุถ ูู continueุ",
        options: [
            "ุฅููุงุก ุงูุจุฑูุงูุฌ",
            "ุชุฎุทู ุจุงูู ุงูููุฏ ูู ุงูุชูุฑุงุฑ ุงูุญุงูู ูุงูุงูุชูุงู ููุฐู ูููู",
            "ุฅุนุงุฏุฉ ุชุนููู ุงููุชุบูุฑุงุช",
            "ุทุจุงุนุฉ ูููุฉ ูุนููุฉ"
        ],
        answer: "ุชุฎุทู ุจุงูู ุงูููุฏ ูู ุงูุชูุฑุงุฑ ุงูุญุงูู ูุงูุงูุชูุงู ููุฐู ูููู",
        explanation: "continue ููููู ุจุงูู ุงูุชุนูููุงุช ูู ูุฐู ุงูุฏูุฑุฉ ููุจุฏุฃ ุงูุฏูุฑุฉ ุงูุชุงููุฉ."
    },

    // ุงูุณุคุงู 55
    {
        question: "ูุง ููุน ุงูุญููุฉ ุงูุฃูุณุจ ููุชูุฑุงุฑ ุนุจุฑ ุนูุงุตุฑ ูุงุฆูุฉุ",
        options: ["while", "do-while", "for", "switch"],
        answer: "for",
        explanation: "for ูุตููุฉ ุฎุตูุตูุง ููุชูุฑุงุฑ ุนุจุฑ ูุฌููุนุงุช ุฃู ูุทุงูุงุช."
    },

    // ุงูุณุคุงู 56
    {
        question: "ูุง ุงูุฐู ูุถูู ุนุฏู ุฏุฎูู ุญููุฉ while ูู ุชูุฑุงุฑ ูุง ููุงุฆูุ",
        options: [
            "ุงุณุชุฎุฏุงู ูุชุบูุฑ ุนุงููู",
            "ุชุบููุฑ ูููุฉ ุงููุชุบูุฑ ูู ุดุฑุท while ุฏุงุฎู ุงูุญููุฉ",
            "ุงุณุชุฎุฏุงู break ููุท",
            "ุนุฏู ุงุณุชุฎุฏุงู ุดุฑูุท"
        ],
        answer: "ุชุบููุฑ ูููุฉ ุงููุชุบูุฑ ูู ุดุฑุท while ุฏุงุฎู ุงูุญููุฉ",
        explanation: "ูุฌุจ ุชุนุฏูู ุงููุชุบูุฑ ูู ุฌุณู ุงูุญููุฉ ููุชุบูุฑ ุงูุดุฑุท ููุตุจุญ False."
    },

    // ุงูุณุคุงู 57
    {
        question: "ูุง ูุชูุฌุฉ: for i in range(3): print(i)ุ",
        options: ["0, 1, 2", "1, 2, 3", "0, 1, 2, 3", "ุฎุทุฃ"],
        answer: "0, 1, 2",
        explanation: "range(3) ูููุฏ 0, 1, 2 (3 ุนูุงุตุฑุ ุชุจุฏุฃ ูู 0)."
    },

    // ุงูุณุคุงู 58
    {
        question: "ูุง ุงูุบุฑุถ ูู else ูู ุญููุฉ whileุ",
        options: [
            "ุชูููุฐ ููุฏ ุฅุฐุง ูู ููููุฐ ุฃู ุชูุฑุงุฑ",
            "ุชูููุฐ ููุฏ ุจุนุฏ ุงูุชูุงุก ุงูุญููุฉ ุจุฏูู break",
            "ุชูููุฐ ููุฏ ุจุฏูู ุนูุฏ ูุฌูุฏ ุฎุทุฃ",
            "ูุง ููุฌุฏ else ููุญููุงุช"
        ],
        answer: "ุชูููุฐ ููุฏ ุจุนุฏ ุงูุชูุงุก ุงูุญููุฉ ุจุฏูู break",
        explanation: "else ูู while ุชููุฐ ููุท ุฅุฐุง ุงูุชูุช ุงูุญููุฉ ุจุดูู ุทุจูุนู (ุจุฏูู break)."
    },

    // ุงูุณุคุงู 59
    {
        question: "ูุง ุงูุฎุทุฃ ูู: while x < 10: print(x)ุ",
        options: [
            "ูุง ููุฌุฏ ุฎุทุฃ",
            "x ูู ุชูุนุฑู ุฃู ูู ุชุชุบูุฑ",
            "ูุง ูููู ุงุณุชุฎุฏุงู < ูู while",
            "ูุฌุจ ุงุณุชุฎุฏุงู for ููุท"
        ],
        answer: "x ูู ุชูุนุฑู ุฃู ูู ุชุชุบูุฑ",
        explanation: "ุฅุฐุง ูู ุชุชุบูุฑ x ุฏุงุฎู ุงูุญููุฉุ ุณุชููู ุญููุฉ ูุง ููุงุฆูุฉ."
    },

    // ุงูุณุคุงู 60
    {
        question: "ูุง ุงูุฃูุณุจ ููุฑุงุกุฉ ูุฏุฎูุงุช ุงููุณุชุฎุฏู ุญุชู ููุชุจ \"exit\"ุ",
        options: ["for", "while", "switch", "if-else"],
        answer: "while",
        explanation: "ุนุฏุฏ ุงูุชูุฑุงุฑุงุช ุบูุฑ ูุนุฑูู ูุณุจููุงุ ูุฐุง while ูู ุงูุฃูุณุจ."
    },

    // ุงูุณุคุงู 61
    {
        question: "ูุง ุงูููุตูุฏ ุจู Frontendุ",
        options: [
            "ุงูุฎุงุฏู ูููุงุนุฏ ุงูุจูุงูุงุช",
            "ุงูุฌุฒุก ุงูุฐู ูุชูุงุนู ูุนู ุงููุณุชุฎุฏู ูุจุงุดุฑุฉ",
            "ูุธุงู ุงูุชุดุบูู",
            "ุงูุดุจูุฉ ุงูุฏุงุฎููุฉ"
        ],
        answer: "ุงูุฌุฒุก ุงูุฐู ูุชูุงุนู ูุนู ุงููุณุชุฎุฏู ูุจุงุดุฑุฉ",
        explanation: "ุงููุงุฌูุฉ ุงูุฃูุงููุฉ ุชุดูู HTML/CSS/JS ุงูุชู ูุฑุงูุง ุงููุณุชุฎุฏู."
    },

    // ุงูุณุคุงู 62
    {
        question: "ูุง ุฏูุฑ HTML ูู ุชุทููุฑ ุงูููุจุ",
        options: [
            "ุฅุถุงูุฉ ุงูุชูุงุนููุฉ",
            "ุจูุงุก ุงููููู ูุงููุญุชูู",
            "ุชุตููู ุงูุฃููุงู ูุงูุฎุทูุท",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช"
        ],
        answer: "ุจูุงุก ุงููููู ูุงููุญุชูู",
        explanation: "HTML ููููููุ CSS ููุชุตูููุ JS ููุชูุงุนู."
    },

    // ุงูุณุคุงู 63
    {
        question: "ูุง ุงูุนูุจ ุงูุฑุฆูุณู ูู CSS ูู ุงููุดุงุฑูุน ุงููุจูุฑุฉุ",
        options: [
            "ุตุนูุจุฉ ุงูุชูุงูู ุจูู ุงููุชุตูุญุงุช",
            "ุนุฏู ุงููุฏุฑุฉ ุนูู ุชุบููุฑ ุงูุฃููุงู",
            "ุจุทุก ุงูุชูููุฐ",
            "ูุง ูุฏุนู ุงูููุงุชู"
        ],
        answer: "ุตุนูุจุฉ ุงูุชูุงูู ุจูู ุงููุชุตูุญุงุช",
        explanation: "ุงูุชูุงูู ุจูู ุงููุชุตูุญุงุช ุชุญุฏู ุดุงุฆุน ูู CSS."
    },

    // ุงูุณุคุงู 64
    {
        question: "ูุง ุฏูุฑ JavaScript ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉุ",
        options: [
            "ุจูุงุก ุงููููู ููุท",
            "ุฅุถุงูุฉ ุงูุชูุงุนููุฉ ูุงูุฏููุงููููุฉ",
            "ุชุฎุฒูู ุงูุจูุงูุงุช",
            "ุฅุฏุงุฑุฉ ุงูุฎูุงุฏู"
        ],
        answer: "ุฅุถุงูุฉ ุงูุชูุงุนููุฉ ูุงูุฏููุงููููุฉ",
        explanation: "JS ุชูุณุชุฎุฏู ููุนุงูุฌุฉ ุงูุฃุญุฏุงุซุ ุงูุชุญุฏูุซ ุงูุฏููุงููููุ ุฅูุฎ."
    },

    // ุงูุณุคุงู 65
    {
        question: "ูุง ุฏูุฑ Backendุ",
        options: [
            "ุนุฑุถ ุงูุฃุฒุฑุงุฑ ูููุณุชุฎุฏู",
            "ูุนุงูุฌุฉ ููุทู ุงูุนูู ูุฅุฏุงุฑุฉ ุงูุจูุงูุงุช ุนูู ุงูุฎุงุฏู",
            "ุชุตููู ุงููุงุฌูุงุช",
            "ุชุญุณูู ุงูุฃุฏุงุก ุงูุจุตุฑู"
        ],
        answer: "ูุนุงูุฌุฉ ููุทู ุงูุนูู ูุฅุฏุงุฑุฉ ุงูุจูุงูุงุช ุนูู ุงูุฎุงุฏู",
        explanation: "ุงูุทุฑู ุงูุฎููู ูุชุนุงูู ูุน ููุงุนุฏ ุงูุจูุงูุงุชุ ุงููุตุงุฏูุฉุ APIs..."
    },

    // ุงูุณุคุงู 66
    {
        question: "ูุง ููุฒุฉ Python ูู ุชุทููุฑ ุงูู Backendุ",
        options: [
            "ุณุฑุนุฉ ุนุงููุฉ ุฌุฏูุง ูู ุงูุฃุฏุงุก",
            "ุณูููุฉ ุงูุชุนูู ูุงููุฑุงุกุฉ",
            "ูุง ุชุญุชุงุฌ ูููุชุจุงุช",
            "ุชุนูู ููุท ุนูู Windows"
        ],
        answer: "ุณูููุฉ ุงูุชุนูู ูุงููุฑุงุกุฉ",
        explanation: "Python ูุดููุฑุฉ ุจุจุณุงุทุชูุง ููุถูุญ ุงูููุฏ."
    },

    // ุงูุณุคุงู 67
    {
        question: "ูุง ุฏูุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ุชุทููุฑ ุงูููุจุ",
        options: [
            "ุนุฑุถ ุงูุตูุญุงุช",
            "ุชุฎุฒูู ูุงุณุชุฑุฌุงุน ุงูุจูุงูุงุช ุจุดูู ููุธู",
            "ุชุตููู ุงููุงุฌูุงุช",
            "ูุชุงุจุฉ ุงูููุฏ ุงูุฃูุงูู"
        ],
        answer: "ุชุฎุฒูู ูุงุณุชุฑุฌุงุน ุงูุจูุงูุงุช ุจุดูู ููุธู",
        explanation: "ููุงุนุฏ ุงูุจูุงูุงุช (ูุซู MySQL) ุชูุณุชุฎุฏู ูุชุฎุฒูู ุจูุงูุงุช ุงููุณุชุฎุฏูููุ ุงูููุชุฌุงุช... ุฅูุฎ."
    },

    // ุงูุณุคุงู 68
    {
        question: "ูุง ุงูุฅุทุงุฑ ุงูุฃูุณุจ ูุจูุงุก ูุงุฌูุงุช ูุณุชุฎุฏู ุฏููุงููููุฉ ูุน JavaScriptุ",
        options: ["Django", "React", "MySQL", "PHP"],
        answer: "React",
        explanation: "React ูู ุฅุทุงุฑ ุนูู ุฃูุงูู ูุจูู ุนูู JS ูุจูุงุก ูุงุฌูุงุช ุชูุงุนููุฉ."
    },

    // ุงูุณุคุงู 69
    {
        question: "ูุง ููุฒุฉ Node.jsุ",
        options: [
            "ุจูุฆุฉ ูุชุดุบูู JS ุนูู ุงูุฎุงุฏู",
            "ูุบุฉ ูุชุตููู ุงููุงุฌูุงุช",
            "ูุงุนุฏุฉ ุจูุงูุงุช",
            "ูุธุงู ุชุดุบูู"
        ],
        answer: "ุจูุฆุฉ ูุชุดุบูู JS ุนูู ุงูุฎุงุฏู",
        explanation: "Node.js ุชุณูุญ ุจุงุณุชุฎุฏุงู JavaScript ูู ุงูุทุฑู ุงูุฎููู."
    },

    // ุงูุณุคุงู 70
    {
        question: "ูุง ุฏูุฑ ุฅุทุงุฑ ุงูุนูู ูุซู Laravelุ",
        options: [
            "ุจูุงุก ูุงุฌูุงุช ุฃูุงููุฉ ููุท",
            "ุชุณุฑูุน ุชุทููุฑ ุชุทุจููุงุช PHP ุงูุฎูููุฉ",
            "ุงุณุชุจุฏุงู JavaScript",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช ููุท"
        ],
        answer: "ุชุณุฑูุน ุชุทููุฑ ุชุทุจููุงุช PHP ุงูุฎูููุฉ",
        explanation: "Laravel ุฅุทุงุฑ ุนูู ูู PHP ูุจูุงุก ุชุทุจููุงุช ุฎูููุฉ ุจุณุฑุนุฉ ูููุงุกุฉ."
    },

    // ุงูุณุคุงู 71
    {
        question: "ูุง ุงููุบุฉ ุงูุฑุณููุฉ ุงูููุถูุฉ ูุชุทููุฑ Android ุญุณุจ Googleุ",
        options: ["Java", "C++", "Kotlin", "Python"],
        answer: "Kotlin",
        explanation: "ุฌูุฌู ุฃุนููุช Kotlin ููุบุฉ ุฃููู ููุถูุฉ ูุชุทููุฑ Android."
    },

    // ุงูุณุคุงู 72
    {
        question: "ูุง ุฏูุฑ Android Studioุ",
        options: [
            "ูุชุตูุญ ุฅูุชุฑูุช",
            "ุจูุฆุฉ ุชุทููุฑ ูุชูุงููุฉ ูุชุทุจููุงุช Android",
            "ูุธุงู ุชุดุบูู",
            "ูุงุนุฏุฉ ุจูุงูุงุช"
        ],
        answer: "ุจูุฆุฉ ุชุทููุฑ ูุชูุงููุฉ ูุชุทุจููุงุช Android",
        explanation: "Android Studio ูู IDE ุฑุณูู ูุชุทููุฑ ุชุทุจููุงุช Android."
    },

    // ุงูุณุคุงู 73
    {
        question: "ูุง ุฏูุฑ XML ูู ุชุทููุฑ Androidุ",
        options: [
            "ูุชุงุจุฉ ุงูููุทู ุงูุจุฑูุฌู",
            "ุชุตููู ูุงุฌูุงุช ุงููุณุชุฎุฏู",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช",
            "ูุนุงูุฌุฉ ุงููุตุงุฏูุฉ"
        ],
        answer: "ุชุตููู ูุงุฌูุงุช ุงููุณุชุฎุฏู",
        explanation: "XML ููุณุชุฎุฏู ููุตู ุชุฎุทูุท ุงููุงุฌูุงุช (Layouts)."
    },

    // ุงูุณุคุงู 74
    {
        question: "ูุง ููุฒุฉ Firebaseุ",
        options: [
            "ุจูุฆุฉ ุชุดุบูู ููุฃูุนุงุจ",
            "ููุตุฉ ุฎูููุฉ ูุฎุฏูุฉ (BaaS)",
            "ูุบุฉ ุจุฑูุฌุฉ",
            "ูุชุตูุญ ููุจ"
        ],
        answer: "ููุตุฉ ุฎูููุฉ ูุฎุฏูุฉ (BaaS)",
        explanation: "Firebase ุชูุฏู ุฎุฏูุงุช ูุซู ุงูุชุฎุฒููุ ุงููุตุงุฏูุฉุ ููุงุนุฏ ุงูุจูุงูุงุช ุจุฏูู ุจููุฉ ุชุญุชูุฉ."
    },

    // ุงูุณุคุงู 75
    {
        question: "ูุง ุงููุบุฉ ุงูุฑุณููุฉ ูุชุทููุฑ iOSุ",
        options: ["Objective-C", "Java", "Swift", "Kotlin"],
        answer: "Swift",
        explanation: "Swift ูู ุงููุบุฉ ุงูุญุฏูุซุฉ ุงููุฏุนููุฉ ูู Apple ูุชุทููุฑ iOS."
    },

    // ุงูุณุคุงู 76
    {
        question: "ูุง ุฏูุฑ Xcodeุ",
        options: [
            "ูุญุงูู ุฃูุฏุฑููุฏ",
            "ุจูุฆุฉ ุชุทููุฑ ุฑุณููุฉ ูุชุทุจููุงุช Apple",
            "ุฎุงุฏู ููุจ",
            "ูุงุนุฏุฉ ุจูุงูุงุช"
        ],
        answer: "ุจูุฆุฉ ุชุทููุฑ ุฑุณููุฉ ูุชุทุจููุงุช Apple",
        explanation: "Xcode ูู IDE ุงูุฑุณูู ูุชุทููุฑ ุชุทุจููุงุช iOS/macOS."
    },

    // ุงูุณุคุงู 77
    {
        question: "ูุง ุงููุฑู ุจูู SwiftUI ู UIKitุ",
        options: [
            "SwiftUI ุญุฏูุซ ูุชุนุชูุฏ ุนูู ุงูุชุตุฑูุญุ UIKit ุชูููุฏู",
            "UIKit ุฃุณุฑุน ุฏุงุฆููุง",
            "SwiftUI ุชุนูู ููุท ุนูู Android",
            "ูุง ูุฑู"
        ],
        answer: "SwiftUI ุญุฏูุซ ูุชุนุชูุฏ ุนูู ุงูุชุตุฑูุญุ UIKit ุชูููุฏู",
        explanation: "SwiftUI ุฅุทุงุฑ ุญุฏูุซ ูุนุชูุฏ ุนูู Declarative UIุ ุจูููุง UIKit ูุฏูู ูุฃูุซุฑ ุชุนููุฏูุง."
    },

    // ุงูุณุคุงู 78
    {
        question: "ูุง ููุฒุฉ Kotlin ููุงุฑูุฉ ุจู Java ูู Androidุ",
        options: [
            "ุฃูุซุฑ ุฃูุงููุง ูุฃูู ูุตูุง",
            "ุฃุจุทุฃ ูู ุงูุฃุฏุงุก",
            "ูุง ุชุฏุนู OOP",
            "ูุง ุชุนูู ุนูู Android"
        ],
        answer: "ุฃูุซุฑ ุฃูุงููุง ูุฃูู ูุตูุง",
        explanation: "Kotlin ุฃูุซุฑ ุฅูุฌุงุฒูุง ูุฃูุงููุง (Null Safety) ูุชุชูุงูู ูุน Java."
    },

    // ุงูุณุคุงู 79
    {
        question: "ูุง ุงูุฐู ููุณุชุฎุฏู ูููุตูู ุฅูู ุงููุงููุฑุง ุฃู GPS ูู ุชุทุจููุงุช ุงูููุงุชูุ",
        options: ["HTML", "ูุงุฌูุงุช ุจุฑูุฌุฉ ุงูุชุทุจููุงุช (APIs) ุงูุฎุงุตุฉ ุจุงููุธุงู", "CSS", "SQL"],
        answer: "ูุงุฌูุงุช ุจุฑูุฌุฉ ุงูุชุทุจููุงุช (APIs) ุงูุฎุงุตุฉ ุจุงููุธุงู",
        explanation: "APIs ุงููุธุงููุฉ ุชููุญ ุงูุชุทุจูู ุตูุงุญูุฉ ุงููุตูู ูุฃุฌูุฒุฉ ุงููุงุชู."
    },

    // ุงูุณุคุงู 80
    {
        question: "ูุง ุงูุชุญุฏู ุงูุฑุฆูุณู ูู ุชุทููุฑ ุชุทุจููุงุช iOSุ",
        options: [
            "ุงูุนูู ููุท ุนูู ุฃุฌูุฒุฉ Mac",
            "ุนุฏู ูุฌูุฏ ูุบุงุช ุจุฑูุฌุฉ",
            "ุนุฏู ุฏุนู ุงูููุงุชู",
            "ุจุทุก ุงูุฃุฏุงุก"
        ],
        answer: "ุงูุนูู ููุท ุนูู ุฃุฌูุฒุฉ Mac",
        explanation: "Xcode ู ุฃุฏูุงุช Apple ุชุนูู ููุท ุนูู macOS."
    },

    // ุงูุณุคุงู 81
    {
        question: "ูุง ููุฒุฉ ุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ููุงุฑูุฉ ุจุงูููุจุ",
        options: [
            "ูุง ุชุญุชุงุฌ ุงุชุตุงู ุฅูุชุฑูุช",
            "ูุงุฌูุงุช ุฃุจุทุฃ",
            "ูุง ุชุฏุนู ุงูุชุฎุฒูู",
            "ูุง ูููู ุชุซุจูุชูุง"
        ],
        answer: "ูุง ุชุญุชุงุฌ ุงุชุตุงู ุฅูุชุฑูุช",
        explanation: "ุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ุชุนูู ุฏูู ุงุชุตุงูุ ูุชุณุชููุฏ ูู ููุงุฑุฏ ุงูุฌูุงุฒ ูุจุงุดุฑุฉ."
    },

    // ุงูุณุคุงู 82
    {
        question: "ูุง ุงููุบุฉ ุงูุฃูุณุจ ูุจูุงุก ุชุทุจููุงุช Windows Desktopุ",
        options: ["HTML", "C#", "PHP", "SQL"],
        answer: "C#",
        explanation: "C# ูุน .NET Framework ุฃู WPF ูู ุงูุฎูุงุฑ ุงูุฃูุซู ูุชุทุจููุงุช Windows."
    },

    // ุงูุณุคุงู 83
    {
        question: "ูุง ุฏูุฑ PyQtุ",
        options: [
            "ุชุทููุฑ ุชุทุจููุงุช ููุจ",
            "ุชุทููุฑ ุชุทุจููุงุช ุณุทุญ ููุชุจ ุจูุบุฉ Python",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช",
            "ุจุฑูุฌุฉ ุงูุฃูุนุงุจ ููุท"
        ],
        answer: "ุชุทููุฑ ุชุทุจููุงุช ุณุทุญ ููุชุจ ุจูุบุฉ Python",
        explanation: "PyQt ุฅุทุงุฑ ุนูู ูุจูุงุก ูุงุฌูุงุช ุณุทุญ ููุชุจ ุจุงุณุชุฎุฏุงู Python."
    },

    // ุงูุณุคุงู 84
    {
        question: "ูุง ุงูุนูุจ ุงูุฑุฆูุณู ูุชุทุจููุงุช Electronุ",
        options: [
            "ุงุณุชููุงู ุนุงูู ููุฐุงูุฑุฉ",
            "ูุง ุชุนูู ุนูู Windows",
            "ูุง ุชุฏุนู JavaScript",
            "ูุง ูููู ุชุตููู ูุงุฌูุงุช ุจูุง"
        ],
        answer: "ุงุณุชููุงู ุนุงูู ููุฐุงูุฑุฉ",
        explanation: "Electron ูุนุชูุฏ ุนูู Chromiumุ ูุฐุง ุญุฌู ุงูุชุทุจูู ูุงุณุชููุงูู ููุฐุงูุฑุฉ ูุจูุฑ."
    },

    // ุงูุณุคุงู 85
    {
        question: "ูุง ููุฒุฉ ++C ูู ุชุทููุฑ ุณุทุญ ุงูููุชุจุ",
        options: [
            "ุฃุฏุงุก ุนุงูู ูุชุญูู ูุงูู ุจุงูุฐุงูุฑุฉ",
            "ุณูููุฉ ุงูุชุนูู",
            "ูุง ุชุญุชุงุฌ ููุชุฑุฌู",
            "ุชุนูู ููุท ุนูู ุงูููุงุชู"
        ],
        answer: "ุฃุฏุงุก ุนุงูู ูุชุญูู ูุงูู ุจุงูุฐุงูุฑุฉ",
        explanation: "++C ุชููุฑ ุชุญูููุง ููุฎูุถ ุงููุณุชูู ูุฃุฏุงุกู ุนุงูููุงุ ูุซุงููุฉ ููุชุทุจููุงุช ุงูุซูููุฉ."
    },

    // ุงูุณุคุงู 86
    {
        question: "ูุง ุฏูุฑ JavaFXุ",
        options: [
            "ุชุทููุฑ ููุงูุน ููุจ",
            "ุจูุงุก ูุงุฌูุงุช ูุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ุจู Java",
            "ุฅุฏุงุฑุฉ ุงูุฎูุงุฏู",
            "ุจุฑูุฌุฉ ููุงุนุฏ ุงูุจูุงูุงุช"
        ],
        answer: "ุจูุงุก ูุงุฌูุงุช ูุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ุจู Java",
        explanation: "JavaFX ุฅุทุงุฑ ุนูู ูุจูุงุก ูุงุฌูุงุช ุฑุณูููุฉ ูุชุทุจููุงุช Java Desktop."
    },

    // ุงูุณุคุงู 87
    {
        question: "ูุง ุงูุชุญุฏู ูู ุงุณุชุฎุฏุงู Tkinterุ",
        options: [
            "ูุงุฌูุงุช ูุฏ ุชุจุฏู ูุฏููุฉ",
            "ูุง ุชุนูู ุนูู Windows",
            "ูุง ุชุฏุนู Python",
            "ูุง ูููู ุฅูุดุงุก ุฃุฒุฑุงุฑ"
        ],
        answer: "ูุงุฌูุงุช ูุฏ ุชุจุฏู ูุฏููุฉ",
        explanation: "Tkinter ุจุณูุท ููู ูุงุฌูุงุชู ุบูุฑ ุนุตุฑูุฉ ููุงุฑูุฉ ุจู PyQt ุฃู Electron."
    },

    // ุงูุณุคุงู 88
    {
        question: "ูุง ุงูุฐู ูููุฒ ุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ูู ูุฌุงู CAD ุฃู ุงูุฃูุนุงุจุ",
        options: [
            "ูุตูู ูุจุงุดุฑ ูููุงุฑุฏ ุงูุฌูุงุฒ (GPU, CPU)",
            "ูุง ุชุญุชุงุฌ ุฐุงูุฑุฉ",
            "ุชุนูู ููุท ุนูู ุงูุฅูุชุฑูุช",
            "ูุง ุชุฏุนู ุงููุงูุณ"
        ],
        answer: "ูุตูู ูุจุงุดุฑ ูููุงุฑุฏ ุงูุฌูุงุฒ (GPU, CPU)",
        explanation: "ุงูุฃุฏุงุก ุงูุนุงูู ูุชุทูุจ ูุตููุงู ูุจุงุดุฑูุง ููุนุชุงุฏุ ููู ูุง ุชููุฑู ุชุทุจููุงุช Desktop."
    },

    // ุงูุณุคุงู 89
    {
        question: "ูุง ุฏูุฑ ุฅุทุงุฑ ุงูุนูู WPFุ",
        options: [
            "ุชุทููุฑ ุชุทุจููุงุช ููุจ",
            "ุชุทููุฑ ุชุทุจููุงุช Windows Desktop ูุชูุฏูุฉ",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช",
            "ุจุฑูุฌุฉ ุงูููุงุชู"
        ],
        answer: "ุชุทููุฑ ุชุทุจููุงุช Windows Desktop ูุชูุฏูุฉ",
        explanation: "WPF ุฅุทุงุฑ Microsoft ูุจูุงุก ูุงุฌูุงุช Windows Desktop ุบููุฉ."
    },

    // ุงูุณุคุงู 90
    {
        question: "ูุง ุงูุนูุจ ูู ุชุทุจููุงุช ุณุทุญ ุงูููุชุจ ููุงุฑูุฉ ุจุงูููุจุ",
        options: [
            "ุตุนูุจุฉ ุงูุชุญุฏูุซ ูุงููุดุฑ",
            "ุฃุฏุงุก ุฃุนูู",
            "ูุตูู ูุจุงุดุฑ ููุฃุฌูุฒุฉ",
            "ูุง ุชุญุชุงุฌ ุฅูุชุฑูุช"
        ],
        answer: "ุตุนูุจุฉ ุงูุชุญุฏูุซ ูุงููุดุฑ",
        explanation: "ุชุญุฏูุซ ุชุทุจููุงุช ุงูููุจ ูุชู ุชููุงุฆููุง ุนูู ุงูุฎุงุฏูุ ุจูููุง Desktop ูุญุชุงุฌ ุฅุนุงุฏุฉ ุชุซุจูุช."
    },

    // ุงูุณุคุงู 91
    {
        question: "ูุง ูุญุฑู ุงูุฃูุนุงุจ ุงูุฃูุณุจ ูููุจุชุฏุฆูู ูุงูุฃูุนุงุจ ุซูุงุฆูุฉ ูุซูุงุซูุฉ ุงูุฃุจุนุงุฏุ",
        options: ["Unreal Engine", "Unity", "CryEngine", "Godot"],
        answer: "Unity",
        explanation: "Unity ุณูู ุงูุชุนููุ ูุฏุนู 2D/3Dุ ููู ูุฌุชูุน ุถุฎู ูุฃุตูู ุฌุงูุฒุฉ."
    },

    // ุงูุณุคุงู 92
    {
        question: "ูุง ููุฒุฉ Unreal Engineุ",
        options: [
            "ุฑุณููุงุช ูุงูุนูุฉ ุนุงููุฉ ููุญุฑู ููู ููุฃูุนุงุจ AAA",
            "ูุง ูุฏุนู 3D",
            "ูุฎุตุต ููุฃูุนุงุจ ุซูุงุฆูุฉ ุงูุฃุจุนุงุฏ ููุท",
            "ูุง ูุญุชุงุฌ ูุฌูุงุฒ ููู"
        ],
        answer: "ุฑุณููุงุช ูุงูุนูุฉ ุนุงููุฉ ููุญุฑู ููู ููุฃูุนุงุจ AAA",
        explanation: "Unreal ููุชุงุฒ ููุฃูุนุงุจ ุซูุงุซูุฉ ุงูุฃุจุนุงุฏ ุนุงููุฉ ุงูุฌูุฏุฉ (ูุซู Fortnite)."
    },

    // ุงูุณุคุงู 93
    {
        question: "ูุง ูุบุฉ ุงูุจุฑูุฌุฉ ุงูุฃุณุงุณูุฉ ูู Unityุ",
        options: ["Python", "Java", "C#", "JavaScript"],
        answer: "C#",
        explanation: "C# ูู ุงููุบุฉ ุงูุฃุณุงุณูุฉ ููุจุฑูุฌุฉ ูู Unity."
    },

    // ุงูุณุคุงู 94
    {
        question: "ูุง ุงูุนูุจ ุงูุฑุฆูุณู ูู Unreal Engine ูููุดุงุฑูุน ุงูุตุบูุฑุฉุ",
        options: [
            "ุชุนููุฏ ููุชุทูุจ ุฌูุงุฒูุง ููููุง",
            "ูุง ูุฏุนู ุงูุตูุช",
            "ูุง ูุฏุนู ุงูุดุฎุตูุงุช",
            "ูุฌุงูู ููุท ููุฃูุนุงุจ ุงููุจูุฑุฉ"
        ],
        answer: "ุชุนููุฏ ููุชุทูุจ ุฌูุงุฒูุง ููููุง",
        explanation: "Unreal ููู ูููู ุซููู ููุนูุฏ ูููุดุงุฑูุน ุงูุจุณูุทุฉ."
    },

    // ุงูุณุคุงู 95
    {
        question: "ูุง ุฏูุฑ ููุฒูุงุก ุงููุนุจุฉ (Game Physics)ุ",
        options: [
            "ุนุฑุถ ุงููุตูุต ููุท",
            "ูุญุงูุงุฉ ุงูุญุฑูุฉุ ุงูุฌุงุฐุจูุฉุ ุงูุชุตุงุฏู",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช",
            "ุชุตููู ุงููุงุฌูุงุช"
        ],
        answer: "ูุญุงูุงุฉ ุงูุญุฑูุฉุ ุงูุฌุงุฐุจูุฉุ ุงูุชุตุงุฏู",
        explanation: "ุฃูุธูุฉ ุงูููุฒูุงุก ุชุญุงูู ุงููุงูุน (ุณููุทุ ุงุฑุชุฏุงุฏุ ุงุญุชูุงู...)."
    },

    // ุงูุณุคุงู 96
    {
        question: "ูุง ุฃูููุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุชุทููุฑ ุงูุฃูุนุงุจุ",
        options: [
            "ุฌุนู ุงูุดุฎุตูุงุช ุบูุฑ ูุงุจูุฉ ูููุฒููุฉ",
            "ุฌุนู ุณููู ุงูุฎุตูู ุฃู ุงูุญููุงุก ูุงูุนููุง ูุชูุงุนูููุง",
            "ุชูููู ุญุฌู ุงููุนุจุฉ",
            "ููุน ุงุณุชุฎุฏุงู ุงููุงูุณ"
        ],
        answer: "ุฌุนู ุณููู ุงูุฎุตูู ุฃู ุงูุญููุงุก ูุงูุนููุง ูุชูุงุนูููุง",
        explanation: "AI ููุณุชุฎุฏู ูุชุทููุฑ ุณููู ุบูุฑ ูุงุนุจ (NPCs) ุฐูู ููุงูุนู."
    },

    // ุงูุณุคุงู 97
    {
        question: "ูุง ุงูุชุญุฏู ูู ุชุทููุฑ ุงูุฃูุนุงุจ ููุงุฑูุฉ ุจุงูุชุทุจููุงุช ุงูุชูููุฏูุฉุ",
        options: [
            "ุฏูุฌ ุงูุฑุณููุงุชุ ุงูุตูุชุ ุงูููุฒูุงุกุ ุงูุชุญููุ AI",
            "ูุง ุชุญุชุงุฌ ุจุฑูุฌุฉ",
            "ูุง ุชุญุชุงุฌ ุชุตููู",
            "ูุง ุชุญุชุงุฌ ุงุฎุชุจุงุฑ"
        ],
        answer: "ุฏูุฌ ุงูุฑุณููุงุชุ ุงูุตูุชุ ุงูููุฒูุงุกุ ุงูุชุญููุ AI",
        explanation: "ุงูุฃูุนุงุจ ุชุชุทูุจ ุชูุงูููุง ูุนูุฏูุง ุจูู ุนุฏุฉ ุฃูุธูุฉ ูุฑุนูุฉ."
    },

    // ุงูุณุคุงู 98
    {
        question: "ูุง ุฏูุฑ \"Asset Store\" ูู Unityุ",
        options: [
            "ุจูุน ุฃุฌูุฒุฉ ููุจููุชุฑ",
            "ุชูููุฑ ููุงุฐุฌุ ุตูุชุ ููุฏ ุฌุงูุฒ ูุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู",
            "ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช",
            "ุจุฑูุฌุฉ ุงูุฎูุงุฏู"
        ],
        answer: "ุชูููุฑ ููุงุฐุฌุ ุตูุชุ ููุฏ ุฌุงูุฒ ูุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู",
        explanation: "Asset Store ูููุฑ ููุงุฑุฏ ุฌุงูุฒุฉ ูุชุณุฑูุน ุงูุชุทููุฑ."
    },

    // ุงูุณุคุงู 99
    {
        question: "ูุง ููุฒุฉ ุงุณุชุฎุฏุงู ูุญุฑูุงุช ุงูุฃูุนุงุจ ุจุฏู ุงูุจุฑูุฌุฉ ูู ุงูุตูุฑุ",
        options: [
            "ุชูููุฑ ููุช ูุฌูุฏ ุนุจุฑ ุฃุฏูุงุช ุฌุงูุฒุฉ",
            "ุฌุนู ุงููุนุจุฉ ุฃุจุทุฃ",
            "ููุน ุงุณุชุฎุฏุงู ุงูุฑุณููุงุช",
            "ุชูููู ุนุฏุฏ ุงููุงุนุจูู"
        ],
        answer: "ุชูููุฑ ููุช ูุฌูุฏ ุนุจุฑ ุฃุฏูุงุช ุฌุงูุฒุฉ",
        explanation: "ุงููุญุฑูุงุช ุชููุฑ ุฃุฏูุงุช ููุฑุณููุงุชุ ุงูููุฒูุงุกุ ุงูุตูุชุ ููุง ููุณุฑูุน ุงูุชุทููุฑ."
    },

    // ุงูุณุคุงู 100
    {
        question: "ูุง ุงูุฐู ูููุฒ ุงูุฃูุนุงุจ ููุฌุงู ุจุฑูุฌูุ",
        options: [
            "ุฏูุฌ ุงูููุ ุงูุชุตูููุ ุงูุจุฑูุฌุฉุ ุงูุตูุชุ ุงููุตุฉ",
            "ูุง ุชุญุชุงุฌ ุชุฎุทูุทูุง",
            "ูุง ุชุญุชุงุฌ ูุณุชุฎุฏููู",
            "ูุง ุชุญุชุงุฌ ุงุฎุชุจุงุฑูุง"
        ],
        answer: "ุฏูุฌ ุงูููุ ุงูุชุตูููุ ุงูุจุฑูุฌุฉุ ุงูุตูุชุ ุงููุตุฉ",
        explanation: "ุชุทููุฑ ุงูุฃูุนุงุจ ุนูููุฉ ูุชุนุฏุฏุฉ ุงูุชุฎุตุตุงุชุ ูููุณุช ุจุฑูุฌุฉ ููุท."
    }
    ];

    let currentQuestionIndex2 = 0;
    let score2 = 0;
    let userAnswers2 = []; // ูุญูุธ ุฅุฌุงุจุงุช ุงููุณุชุฎุฏู

    // ุฑุจุท ุงูุนูุงุตุฑ ุงูุฎุงุตุฉ ุจุงูุจูุฑ ุงูุซุงูู
    const startQuizBtn2 = document.getElementById('startQuizBtn2');
    const quizContainer2 = document.getElementById('quiz-container2');
    const questionCard2 = document.getElementById('question-card2');
    const currentQuestionElem2 = document.getElementById('currentQuestion2');
    const quizOptionsElem2 = document.getElementById('quizOptions2');
    const feedbackMessageElem2 = document.getElementById('feedbackMessage2');
    const explanationTextElem2 = document.getElementById('explanationText2');
    const progressBar2 = document.getElementById('progressBar2');
    const nextQuestionBtn2 = document.getElementById('nextQuestionBtn2');
    const quizResultsElem2 = document.getElementById('quiz-results2');
    const scoreDisplay2 = document.getElementById('scoreDisplay2');
    const totalQuestionsDisplay2 = document.getElementById('totalQuestionsDisplay2');
    const reviewAnswersElem2 = document.getElementById('reviewAnswers2');
    const retakeQuizBtn2 = document.getElementById('retakeQuizBtn2');

    // ุจุฏุก ุงูุงุฎุชุจุงุฑ ุงูุซุงูู
    function startQuiz2() {
        startQuizBtn2.style.display = 'none';
        quizContainer2.style.display = 'block';
        currentQuestionIndex2 = 0;
        score2 = 0;
        userAnswers2 = [];
        quizResultsElem2.style.display = 'none';
        questionCard2.style.display = 'block';
        loadQuestion2();
    }

    // ุชุญููู ุงูุณุคุงู ุงูุซุงูู
    function loadQuestion2() {
        if (currentQuestionIndex2 < questions2.length) {
            const q = questions2[currentQuestionIndex2];
            currentQuestionElem2.textContent = q.question;
            quizOptionsElem2.innerHTML = '';
            feedbackMessageElem2.textContent = '';
            explanationTextElem2.style.display = 'none';

            nextQuestionBtn2.disabled = true;

            q.options.forEach(option => {
                const li = document.createElement('li');
                li.textContent = option;
                li.addEventListener('click', () => selectAnswer2(li, option, q.answer, q.explanation));
                quizOptionsElem2.appendChild(li);
            });
            updateProgressBar2();
        } else {
            showResults2();
        }
    }

    // ุงุฎุชูุงุฑ ุฅุฌุงุจุฉ ูู ุงูุจูุฑ ุงูุซุงูู
    function selectAnswer2(selectedLi, selectedOption, correctAnswer, explanation) {
        Array.from(quizOptionsElem2.children).forEach(li => {
            li.style.pointerEvents = 'none';
            li.classList.remove('correct', 'incorrect');
        });

        const isCorrect = Array.isArray(correctAnswer)
            ? correctAnswer.includes(selectedOption)
            : selectedOption === correctAnswer;

        let feedbackMessage = '';
        if (isCorrect) {
            selectedLi.classList.add('correct');
            feedbackMessage = 'ุฅุฌุงุจุฉ ุตุญูุญุฉ!';
            score2++;
        } else {
            selectedLi.classList.add('incorrect');
            feedbackMessage = 'ุฅุฌุงุจุฉ ุฎุงุทุฆุฉ.';
            if (!Array.isArray(correctAnswer)) {
                Array.from(quizOptionsElem2.children).forEach(li => {
                    if (li.textContent === correctAnswer) {
                        li.classList.add('correct');
                    }
                });
            } else {
                Array.from(quizOptionsElem2.children).forEach(li => {
                    if (correctAnswer.includes(li.textContent)) {
                        li.classList.add('correct');
                    }
                });
            }
        }

        feedbackMessageElem2.textContent = feedbackMessage;
        explanationTextElem2.textContent = `ุงูุชูุณูุฑ: ${explanation}`;
        explanationTextElem2.style.display = 'block';

        userAnswers2.push({
            question: questions2[currentQuestionIndex2].question,
            selected: selectedOption,
            correct: correctAnswer,
            isCorrect: isCorrect,
            explanation: explanation
        });

        nextQuestionBtn2.disabled = false;
    }

    // ุงูุงูุชูุงู ููุณุคุงู ุงูุชุงูู
    function nextQuestion2() {
        currentQuestionIndex2++;
        loadQuestion2();
    }

    // ุชุญุฏูุซ ุดุฑูุท ุงูุชูุฏู
    function updateProgressBar2() {
        const progress = ((currentQuestionIndex2) / questions2.length) * 100;
        progressBar2.style.width = `${progress}%`;
    }

    // ุนุฑุถ ุงููุชุงุฆุฌ
    function showResults2() {
        quizContainer2.style.display = 'none';
        questionCard2.style.display = 'none';
        quizResultsElem2.style.display = 'block';

        scoreDisplay2.textContent = score2;
        totalQuestionsDisplay2.textContent = questions2.length;
        reviewAnswersElem2.innerHTML = '<h3>ูุฑุงุฌุนุฉ ุงูุฅุฌุงุจุงุช:</h3>';

        userAnswers2.forEach((item, index) => {
            const reviewItem = document.createElement('div');
            reviewItem.classList.add('review-item');

            const qText = document.createElement('p');
            qText.classList.add('review-question');
            qText.textContent = `${index + 1}. ${item.question}`;
            reviewItem.appendChild(qText);

            const userAnswerText = document.createElement('p');
            userAnswerText.classList.add('review-user-answer');
            userAnswerText.textContent = `ุฅุฌุงุจุชู: ${item.selected}`;
            userAnswerText.style.color = item.isCorrect ? '#4CAF50' : '#f44336';

            reviewItem.appendChild(userAnswerText);

            const correctAnswerText = document.createElement('p');
            correctAnswerText.classList.add('review-correct-answer');
            correctAnswerText.textContent = `ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ: ${Array.isArray(item.correct) ? item.correct.join(' ุฃู ') : item.correct}`;
            reviewItem.appendChild(correctAnswerText);

            const explanationText = document.createElement('p');
            explanationText.classList.add('review-explanation');
            explanationText.textContent = `ุงูุชูุณูุฑ: ${item.explanation}`;
            reviewItem.appendChild(explanationText);

            reviewAnswersElem2.appendChild(reviewItem);
        });
    }

    // ุฅุนุงุฏุฉ ุงูุงุฎุชุจุงุฑ
    function retakeQuiz2() {
        startQuiz2();
    }

    // Event Listeners ููุจูุฑ ุงูุซุงูู
    if (startQuizBtn2) startQuizBtn2.addEventListener('click', startQuiz2);
    if (nextQuestionBtn2) nextQuestionBtn2.addEventListener('click', nextQuestion2);
    if (retakeQuizBtn2) retakeQuizBtn2.addEventListener('click', retakeQuiz2);

    // ุงูุญุงูุฉ ุงูุงุจุชุฏุงุฆูุฉ: ุฅุฎูุงุก ุงูุฃุณุฆูุฉ ูุงููุชุงุฆุฌ
    if (quizContainer2) quizContainer2.style.display = 'none';
    if (quizResultsElem2) quizResultsElem2.style.display = 'none';
    if (questionCard2) questionCard2.style.display = 'none';
});

